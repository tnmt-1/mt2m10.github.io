<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>mt2m10 Blog</title>
        <link>https://mt2m10.github.io/</link>
        <description>mt2m10 Blog</description>
        <lastBuildDate>Wed, 31 Aug 2022 23:36:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>ja</language>
        <item>
            <title><![CDATA[4Kモニターとコンパクトデスクトップを購入]]></title>
            <link>https://mt2m10.github.io/2022/09/01/_1</link>
            <guid>/2022/09/01/_1</guid>
            <pubDate>Wed, 31 Aug 2022 23:36:00 GMT</pubDate>
            <description><![CDATA[Amazon セールと Lenovo セールのタイミングでモニターと PC を購入しました。]]></description>
            <content:encoded><![CDATA[<p>Amazon セールと Lenovo セールのタイミングでモニターと PC を購入しました。</p><ul><li><a href="https://www.amazon.co.jp/gp/product/B08P33YYXT/" target="_blank" rel="noopener noreferrer">Uperfect 4K 15.6 インチ</a></li><li><a href="https://www.lenovo.com/jp/ja/d/deals/promo-offers/" target="_blank" rel="noopener noreferrer">ThinkCentre M75q Tiny Gen2</a></li></ul><p>購入の際に次の点を気にして探しました。</p><ol><li>モニターの解像度が 2K 以上</li><li>メモリー 16GB 以上</li><li>CPU はそこそこ</li><li>GPU はいらない</li><li>できれば持ち運びたい</li></ol><p>ラップトップだと少し割高だったので、数年前から気になってた ThinkCentre M75q Tiny Gen2 に決めました。持ち運びはできないけど、持ち運ぶ機会もかなり少ないので、そこは妥協しています。</p><p>モニターは一応家に 1 つあるんですが、リビングで少し PC をいじりたいときに使いたかったので、小さめのモニターを購入しました。ほんとは<a href="https://www.amazon.co.jp//dp/B0983381Z9" target="_blank" rel="noopener noreferrer">JAPANNEXT のやつ</a>がほしかった...</p><p>こんな感じでラップトップ感覚でモニターを置いています。
<img loading="lazy" src="https://i.gyazo.com/2518c5b923f6978b5b53ae60009b7742.jpg" class="img_ev3q"></p><p>PC はメモリー 8GB ですが、16GB のメモリーも買って増設しています。なのでメモリー 24GB です。不足はないかなー思います。足りなければ、16GB をもう 1 枚買います。</p><p>Wi-Fi の動作が非常に不安定です。Wi-Fi の状態を見てると継続時間が数分～ 10 数分で切断されてしまいます。ドライバーの更新とかいろいろ試してるんだけど、期待するほど解消されず。ストレスがたまるほど切断が多い場合は、Wi-Fi カードの交換をしてみようかなと思います。Wi-Fi6 非対応なのでちょうどいいし。</p><p>そんなところです。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Docusaurus]]></title>
            <link>https://mt2m10.github.io/2022/08/30/_1</link>
            <guid>/2022/08/30/_1</guid>
            <pubDate>Mon, 29 Aug 2022 22:36:00 GMT</pubDate>
            <description><![CDATA[Facebook 製のドキュメント生成ツールのDocusaurusにサイトをリニューアルしました。]]></description>
            <content:encoded><![CDATA[<p>Facebook 製のドキュメント生成ツールの<a href="https://docusaurus.io" target="_blank" rel="noopener noreferrer">Docusaurus</a>にサイトをリニューアルしました。</p><p>このサイトはあまり運用はしていないが定期的に UI を変えたくなるんですよね。前回は Next.js 製だったけど、UI を自分で作るのが面倒でモチベーションが下がってきました。もう少しお手軽にできるものを探していたところに、Docusaurus が目に入ったので試しに導入しました。</p><p>ブログやドキュメントの追加のしやすさは、とてもよいと感じています。オリジナルのページを作成したいときは<code>src/pages</code>配下でゴニョゴニョすればできそうだしカスタマイズ性も OK。カスタマイズには React.js の知識は必要だけど知ってればそんなに難しくない(はず)。</p><p>いろいろやれることが多いので docs 見ていろいろ試していこうと思います。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Wi-Fi環境を「メッシュWi-Fi」にして、おまけで「v6プラス」にも対応してみた]]></title>
            <link>https://mt2m10.github.io/2022/07/24/_1</link>
            <guid>/2022/07/24/_1</guid>
            <pubDate>Sun, 24 Jul 2022 11:05:00 GMT</pubDate>
            <description><![CDATA[家のネットワーク環境をアップデートしたのでまとめます。]]></description>
            <content:encoded><![CDATA[<p>家のネットワーク環境をアップデートしたのでまとめます。</p><p>アップデート前は寝室や書斎のWi-Fiが不安定でインターネットにつながらないこともありました。そこでメッシュWi-Fiを導入し解決することにしました。</p><p>用意したルーターはこれです。</p><ul><li>NEC <a href="https://www.amazon.co.jp/gp/product/B089KC4SZF/" target="_blank" rel="noopener noreferrer">Aterm WX3000HP</a></li><li>TP-Link <a href="https://www.amazon.co.jp/gp/product/B0873HL4DV/" target="_blank" rel="noopener noreferrer">Deco X20</a></li></ul><p>ネットワーク構成は下図のようにしました。
<img loading="lazy" src="https://i.gyazo.com/57296c6377ffec69624d2120b562b634.png" alt="20220724_1_構成.png" class="img_ev3q"></p><p>WX3000HPをルーターモードで動かし、Deco X20をブリッジモードにしています。
最初はDeco X20だけで運用するつもりでした。しかし、次の要因からv6プラスも使ってみることにしました。</p><ul><li>プロバイダーがv6プラスに対応している</li><li>Deco X20はv6プラス非対応</li><li>v6プラス対応のWX3000HPを持っている</li></ul><p>ONUとDeco X20の間にWX3000HPを置くことにより、v6プラスの恩恵を受けることができました。</p><p>ネットワーク環境のアップデート後は家のどこでもWi-Fiを受信できるようになり、かなり改善できました。回線速度は50〜180Mbpsぐらいなので、普段使っている分には問題ない速度です。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[プロフィールページ作成]]></title>
            <link>https://mt2m10.github.io/2022/07/18/_1</link>
            <guid>/2022/07/18/_1</guid>
            <pubDate>Mon, 18 Jul 2022 00:27:00 GMT</pubDate>
            <description><![CDATA[重たい腰を上げてプロフィールページを作りました。内容はまだ薄いですが徐々に更新していこうと思います。]]></description>
            <content:encoded><![CDATA[<p>重たい腰を上げて<a href="/docs/about">プロフィールページ</a>を作りました。内容はまだ薄いですが徐々に更新していこうと思います。
ページ上部にアイコンを追加しました。こちらからもページ遷移できます。</p><p>ついでにダークモード対応をやめました。darkベースのみとしました。理由はプロフィールを作ったときに背景色とか取り入れたらライトモードでの色を考えるのがめんどうになったから。気が向いたらまた対応します。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="追記">追記<a class="hash-link" href="#追記" title="見出しへの直接リンク">​</a></h3><p>docusaurusにリニューアルしたので、ダークモード復活しました。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[縁のなかった岐阜県に引っ越した]]></title>
            <link>https://mt2m10.github.io/2022/07/01/1</link>
            <guid>/2022/07/01/1</guid>
            <pubDate>Fri, 01 Jul 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[家庭の事情により、東京から自分には縁のなかった岐阜県に引っ越しをした。]]></description>
            <content:encoded><![CDATA[<p>家庭の事情により、東京から自分には縁のなかった岐阜県に引っ越しをした。</p><p>6月の中旬から住んでいるが、今のところとても快適に過ごせている。高い建物がなく緑が目に入る環境は気持ちが良い。家の隣にはパチンコ屋があるけど、音が気になることは殆どない。東京で暮らしていた時の車の音の方がよっぽど騒がしかった。</p><p>不安なのは車の運転。ペーパードライバーで10年近く運転していないのでめちゃくちゃビビっている。安全運転を心がけます。</p><p>岐阜には5、6年ぐらい住んでそのうち東京に戻ってくる予定だが、過ごしやすいので気が変わるかもしれない。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[AWS Certified Cloud Practitioner に合格]]></title>
            <link>https://mt2m10.github.io/2022/06/05/1</link>
            <guid>/2022/06/05/1</guid>
            <pubDate>Sun, 05 Jun 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[5/27(金)にテストセンターで AWS Certified Cloud Practitioner 試験を受けてきて合格しました。]]></description>
            <content:encoded><![CDATA[<p>5/27(金)にテストセンターで AWS Certified Cloud Practitioner 試験を受けてきて合格しました。</p><p><img loading="lazy" src="https://lh4.googleusercontent.com/vXmg-QneRF6dzuVLtTQadG9x6oVYMSHCV4ied5--Thbycbgj3CB1FcG7wE2y2KzzrMGPRbTmGAF4swPMMcsXTqxq5wIme_HsIzFEdcf8FqK-xWABPXUB8M3Qs6Y1ymzDPMlK8k83Lu5hIP22CIE0GA" class="img_ev3q"></p><p>点数は787点と余裕とは言い難い成績でしたが、合格できて一安心しました。</p><p>試験勉強には <a href="https://www.amazon.co.jp/dp/4798067156" target="_blank" rel="noopener noreferrer">一夜漬けAWS認定クラウドプラクティショナー直前対策テキスト<!-- -->[<!-- -->第2版<!-- -->]</a>&nbsp;だけ使いました。AWSは仕事で少し触れていて、試験で問われるサービスの６割程度は知っていたので、この書籍のみの学習で済みました。</p><p>仕事でAWSを利用したアーキテクチャ設計を知りたいため資格を取りましたが、この資格だけでは不十分だと感じています。この勢いで AWS Certified Solutions Architect - Associate 試験 (SAA-C02) の合格を目指して学習していきたいと思います。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[イベントとアクションの違い]]></title>
            <link>https://mt2m10.github.io/2022/05/19/1</link>
            <guid>/2022/05/19/1</guid>
            <pubDate>Thu, 19 May 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[画面設計書に処理内容を書くときに「イベント」や「アクション」について記載することがあります。今まで雰囲気で使っていましたが、気になったので調べました。]]></description>
            <content:encoded><![CDATA[<p>画面設計書に処理内容を書くときに「イベント」や「アクション」について記載することがあります。今まで雰囲気で使っていましたが、気になったので調べました。</p><p>14年前のとあるブログ記事にはこのように書いてありました。 <a href="http://softest.cocolog-nifty.com/blog/2008/12/post-aecd.html" target="_blank" rel="noopener noreferrer">http://softest.cocolog-nifty.com/blog/2008/12/post-aecd.html</a></p><blockquote><p>イベントとは、遷移をもたらす外的刺激や内的変化などを表し、入力とも事象とも表現される。ひとつのイベントは一つの遷移を決定するが、それらはイベント発生時の状態によって変化する。場合によっては、イベントはシステムに関するものではなく、システムのユーザへの刺激で表現される。たとえば、「電源ボタンを押す」「接続の認証が成功する」「検索クエリーのレスポンスが確定する」「○○さんに連絡する用事が発生する」など。</p></blockquote><blockquote><p>アクションとは、遷移の結果生じる分析が可能な対象物を意味し、入力と対照的に出力とも表現される。混同されやすいが、アクションと遷移後の状態は区別される。ただし、出力も遷移後の状態も同じ名称で表現されることが多いのは確か。たとえば、「（電源がONに遷移して）ディスプレイが点灯する」「（接続の認証が成功して）アイコンが点滅する」「（検索結果が確定して）検索結果が表示される」などである。</p></blockquote><p>なるほど。イベントはアクションのきっかけとなるもの。アクションは処理後の状態を表すようです。</p><p>IPAが作っている <a href="https://www.ipa.go.jp/files/000004447.pdf" target="_blank" rel="noopener noreferrer">第6章 アクション明細 - 000004447.pdf</a>&nbsp;では次のように定義されていました。</p><blockquote><p>イベント：画面の遷移を引き起こすきっかけとなるもの</p></blockquote><blockquote><p>アクション：画面遷移に伴って起動される動作</p></blockquote><p>具体例を見てみます。</p><ul><li>アクション名: ログイン</li><li>イベント名: ログインボタン押下</li><li>アクション処理概要: 入力されたUsernameとPasswordをもとに顧客データを検索し、ユーザ情報画面を表示する。</li></ul><p>イベントはきっかけなので、きっかけとなる事象を書きます。</p><p>アクションは処理動作について書きます。どうやったらアクション名の状態になるのか、を表すことができれば良さそうです。</p><p>イベントが点でアクションが線ってイメージがわきました。</p><p>両者の違いについて調べてもあまり出てきませんでしたが、この2つの説明を読んで自分の中では割と区別できるようになったと思います。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[godologの導入]]></title>
            <link>https://mt2m10.github.io/2022/05/15/1</link>
            <guid>/2022/05/15/1</guid>
            <pubDate>Sun, 15 May 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[昨日書いたように Google Docs を利用する機会が増えました。GitHub Pages も Google Docs から書けると最高なので、 r7kamura/godologを導入して投稿できるようにしました。]]></description>
            <content:encoded><![CDATA[<p><a href="https://mt2m10.github.io/posts/2022-05-14_1" target="_blank" rel="noopener noreferrer">昨日書いた</a>ように Google Docs を利用する機会が増えました。GitHub Pages も Google Docs から書けると最高なので、 <a href="https://github.com/r7kamura/godolog" target="_blank" rel="noopener noreferrer">r7kamura/godolog</a>を導入して投稿できるようにしました。</p><p>この記事も Google Docs から書いています。</p><p>Google Docs で利用できる書式がどの程度変換できるのかテストしてみます。</p><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="見出し">見出し<a class="hash-link" href="#見出し" title="見出しへの直接リンク">​</a></h2><h1>見出し1</h1><h2 class="anchor anchorWithStickyNavbar_LWe7" id="見出し2">見出し2<a class="hash-link" href="#見出し2" title="見出しへの直接リンク">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="見出し3">見出し3<a class="hash-link" href="#見出し3" title="見出しへの直接リンク">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="見出し4">見出し4<a class="hash-link" href="#見出し4" title="見出しへの直接リンク">​</a></h3><h5 class="anchor anchorWithStickyNavbar_LWe7" id="見出し5">見出し5<a class="hash-link" href="#見出し5" title="見出しへの直接リンク">​</a></h5><h6 class="anchor anchorWithStickyNavbar_LWe7" id="見出し6">見出し6<a class="hash-link" href="#見出し6" title="見出しへの直接リンク">​</a></h6><p>タイトル</p><p>サブタイトル</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="箇条書き">箇条書き<a class="hash-link" href="#箇条書き" title="見出しへの直接リンク">​</a></h2><ul><li><p>リスト1</p></li><li><p>リスト2</p></li><li><p>リスト2-1</p></li><li><p>リスト2-2</p></li><li><p>リスト2-2-1</p></li><li><p>リスト3</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="番号付きリスト">番号付きリスト<a class="hash-link" href="#番号付きリスト" title="見出しへの直接リンク">​</a></h2><ol><li><p>リスト1</p></li><li><p>リスト2</p></li><li><p>リスト2-1</p></li><li><p>リスト2-2</p></li><li><p>リスト2-2-1</p></li><li><p>リスト3</p></li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="チェックリスト">チェックリスト<a class="hash-link" href="#チェックリスト" title="見出しへの直接リンク">​</a></h2><ul><li>未チェック</li><li>チェック済み</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="太字">太字<a class="hash-link" href="#太字" title="見出しへの直接リンク">​</a></h2><p>太字</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="斜体">斜体<a class="hash-link" href="#斜体" title="見出しへの直接リンク">​</a></h2><p>斜体</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="下線">下線<a class="hash-link" href="#下線" title="見出しへの直接リンク">​</a></h2><p>下線</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="取り消し線">取り消し線<a class="hash-link" href="#取り消し線" title="見出しへの直接リンク">​</a></h2><p>取り消し線</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="リンク">リンク<a class="hash-link" href="#リンク" title="見出しへの直接リンク">​</a></h2><p><a href="http://example.com" target="_blank" rel="noopener noreferrer">リンク</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="上付き文字">上付き文字<a class="hash-link" href="#上付き文字" title="見出しへの直接リンク">​</a></h2><p>x2</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="下付き文字">下付き文字<a class="hash-link" href="#下付き文字" title="見出しへの直接リンク">​</a></h2><p>x2</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="表">表<a class="hash-link" href="#表" title="見出しへの直接リンク">​</a></h2><p>3x3の表を作ります</p><p>ヘッダー1</p><p>ヘッダー3</p><p>ヘッダー3</p><p>hoge</p><p>fuga</p><p>piyo</p><p>foo</p><p>bar</p><p>baz</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="画像">画像<a class="hash-link" href="#画像" title="見出しへの直接リンク">​</a></h2><p><img loading="lazy" src="https://lh4.googleusercontent.com/GEgTfEPhQ5kpYVe7PUMgIfCamdfbNdpTt0URg6CjPPDvl25YOvWFmwpUiP283xtVS29qaV6vw2jbMh-PnM7Hke0zQg8ptX76cg97Ev4KdlrT_35JqsQF8mzu8HFxp9cQZ0k6vqcZMnXX-k7Joikr7Q" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="テキストカラー">テキストカラー<a class="hash-link" href="#テキストカラー" title="見出しへの直接リンク">​</a></h2><p>赤</p><p>青</p><p>黄</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="背景色">背景色<a class="hash-link" href="#背景色" title="見出しへの直接リンク">​</a></h2><p>赤</p><p>青</p><p>黄</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="コードブロック">コードブロック<a class="hash-link" href="#コードブロック" title="見出しへの直接リンク">​</a></h2><p>print("python hello world!")</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[メモを残す最良ツールを探し続けてる]]></title>
            <link>https://mt2m10.github.io/2022/05/14/_1</link>
            <guid>/2022/05/14/_1</guid>
            <pubDate>Sat, 14 May 2022 09:55:00 GMT</pubDate>
            <description><![CDATA[ちょっとしたメモを残すときは markdown ファイルで管理することが多くなりました。そのとき割と困るのが画像の扱いです。]]></description>
            <content:encoded><![CDATA[<p>ちょっとしたメモを残すときは markdown ファイルで管理することが多くなりました。そのとき割と困るのが画像の扱いです。
markdown で画像を扱う場合は次のステップを踏んでいます。</p><ol><li>画像を保存</li><li>所定のディレクトリに移動</li><li>パスをコピー</li><li>markdownファイルに記載</li></ol><p>これがとても面倒と感じています。画像をテキストのようにコピペで管理したいなーという気持ちが強くなってきました。</p><p>なので、仕事では Google Docs を使うように切り替えています。Google Docsも markdown 記法で書けるようなったのでかなり体験は良い感じです。
あとは、Scrapbox も使うようになりました。これも画像をコピペで貼れます。画像の保存先は Gyazo となっていて管理しやすいです。独自の記法なので書き方に多少の慣れは必要ですが、とても感触はよいです。
Google Docs と Scrapbox の使い分けができていないので、運用面を考えていきたいです。</p><p>テキスト書いてるときは markdown 🥰って思うのに画像が絡んでくると急に markdown 😡って気持ちになるんですよ。分かるかなこの気持ち。</p><p>今後も自分にとっての最良メモツールを探していきます。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[SurfaceのUSB-Cが認識しなかったときの対処法]]></title>
            <link>https://mt2m10.github.io/2022/05/02/_1</link>
            <guid>/2022/05/02/_1</guid>
            <pubDate>Mon, 02 May 2022 11:46:00 GMT</pubDate>
            <description><![CDATA[ある日突然、SurfaceのUSB-Cが認識しなくなりました。]]></description>
            <content:encoded><![CDATA[<p>ある日突然、SurfaceのUSB-Cが認識しなくなりました。
Microsoft Supportに問い合わせたところ解決できたので備忘録として残しておきます。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="結論">結論<a class="hash-link" href="#結論" title="見出しへの直接リンク">​</a></h2><p>次の手順を行ってください。</p><ul><li>Surface に、USB 機器を接続します。現在接続中の場合は、一度外してから再度接続し直します。</li><li>USB 機器が接続された状態で、電源ボタンを 20 秒間長押しします。</li><li>電源が落ちた状態になるので、この後改めて電源を入れ、USB 機器の動作をお試しください。</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="不具合があったときの情報">不具合があったときの情報<a class="hash-link" href="#不具合があったときの情報" title="見出しへの直接リンク">​</a></h2><ul><li>Surface Laptop 4 13.5インチ</li><li>Windows 10 Pro</li><li>OSビルド: 19044.1682</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="不具合時の状態">不具合時の状態<a class="hash-link" href="#不具合時の状態" title="見出しへの直接リンク">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="デバイス-マネージャー-を見るとsurface-retimer-に警告が出ていた">デバイス マネージャー を見ると、Surface Retimer に警告が出ていた<a class="hash-link" href="#デバイス-マネージャー-を見るとsurface-retimer-に警告が出ていた" title="見出しへの直接リンク">​</a></h3><blockquote><p>   このデバイスを開始できません。 (コード 10)</p><p>   {操作の失敗}
要求した操作が失敗しました。</p></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="ドライバーのバージョン">ドライバーのバージョン<a class="hash-link" href="#ドライバーのバージョン" title="見出しへの直接リンク">​</a></h3><blockquote><p>2.17.2.1</p></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="ファームウェアのバージョン">ファームウェアのバージョン<a class="hash-link" href="#ファームウェアのバージョン" title="見出しへの直接リンク">​</a></h3><blockquote><p>1</p></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="ファームウェアの更新状態">ファームウェアの更新状態<a class="hash-link" href="#ファームウェアの更新状態" title="見出しへの直接リンク">​</a></h3><blockquote><p>前回の試行時にファームウェアを更新できませんでした。</p><p>前回の試行のバージョン: 2170201
前回の試行日: 2022/04/28 9:53:24
前回の試行の状態: 0xC0000001</p></blockquote><p>同じような事象が発生した方は一度お試しください。これで解決できなかったら多分初期化しないとダメっぽいです。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[AWSクラウドプラクティショナーのメモ]]></title>
            <link>https://mt2m10.github.io/2022/05/01/_1</link>
            <guid>/2022/05/01/_1</guid>
            <pubDate>Sun, 01 May 2022 13:34:00 GMT</pubDate>
            <description><![CDATA[仕事でがっつりAWSを使った設計をすることになった。ゴールデンウィークにやることもないので、AWSの勉強をしている。いくつか本を買って読んでたけど、イマイチ自分が欲しい情報が入っていない。AWSのベストプラクティス集みたいなのを期待したが、あんまりそういうのは載ってなかった。]]></description>
            <content:encoded><![CDATA[<p>仕事でがっつりAWSを使った設計をすることになった。ゴールデンウィークにやることもないので、AWSの勉強をしている。いくつか本を買って読んでたけど、イマイチ自分が欲しい情報が入っていない。AWSのベストプラクティス集みたいなのを期待したが、あんまりそういうのは載ってなかった。</p><p>資格を取ったほうが体系的に学べるし、今の自分がほしい知識が吸収できそうと思ったので、GW期間中にAWSクラウドプラクティショナーの資格に挑むことにした。その中で、すんなり頭に入ってこなかったサービスや用語についてまとめた。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="elastic-beanstalk">Elastic Beanstalk<a class="hash-link" href="#elastic-beanstalk" title="見出しへの直接リンク">​</a></h2><p>AWSクラウドにアプリケーションのデプロイと管理の環境を簡単に設定できる。</p><p>例えば</p><ul><li>ログ</li><li>EC2インスタンス</li><li>EBS</li><li>ロードバランサー</li><li>セキュリティ</li><li>モニタリング</li><li>VPC</li><li>RDS</li></ul><p>などを簡単に設定できるサービス。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="責任共有モデル">責任共有モデル<a class="hash-link" href="#責任共有モデル" title="見出しへの直接リンク">​</a></h2><p>セキュリティとコンプライアンスについての責任が、AWSと利用者の間で共有されるとする考え方。
この範囲はAWSが責任を持つけど、あの範囲は利用者の責任ね、っていうモデル。</p><p><img loading="lazy" src="https://i.gyazo.com/a4bc1985e65e182d727f9e0adaa605a9.jpg" alt="Shared_Responsibility_Model_V2_JP.a4acd9721218c9d7d4ab5083c349e706e8ad300d" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="aws-artifact">AWS Artifact<a class="hash-link" href="#aws-artifact" title="見出しへの直接リンク">​</a></h2><p>第三者による監査レポートを無料でダウンロードできる。いつでもダウンロード可能。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="tam">TAM<a class="hash-link" href="#tam" title="見出しへの直接リンク">​</a></h2><p>正式名称は <code>Technical Account Manager</code> 。AWSユーザーに対して技術的視点でサポートしてくれる専門家。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="aws-shield">AWS Shield<a class="hash-link" href="#aws-shield" title="見出しへの直接リンク">​</a></h2><p>マネージド型の DDoS 保護。Standard と Advanced の2種類あり。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="standard">Standard<a class="hash-link" href="#standard" title="見出しへの直接リンク">​</a></h3><ul><li>レイヤー3および4 に対する既知の攻撃に向けた保護をする。</li><li>Amazon CloudFront 、 Amazon Route 53 と一緒に使用する。</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="advanced">Advanced<a class="hash-link" href="#advanced" title="見出しへの直接リンク">​</a></h3><p>Standard の機能に加えて次の機能がある。</p><ul><li>次のリソース保護が可能<ul><li>ELBロードバランサー</li><li>EC2 Elastic IPアドレス</li><li>Amazon CloudFront ディストリビューション</li><li>Amazon Route53 ホストゾーン</li><li>AWS Global Accelerator アクセラレーター</li></ul></li><li>大規模で高度な DDoS 攻撃に対する追加の検出および緩和策と、ほぼリアルタイムの可視性を提供</li><li>24 時間 365 日の AWS Shield レスポンスチーム (SRT) へのアクセス</li><li>DDoS に関連して起こったスパイクに対する保護を提供</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="aws-direct-connect">AWS Direct Connect<a class="hash-link" href="#aws-direct-connect" title="見出しへの直接リンク">​</a></h2><p>AWSが提供する専用接続サービス。ユーザーのネットワーク環境からAWSまでインターネットを経由せず(専用線を介して)プライベート接続するサービス。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="vpcエンドポイント">VPCエンドポイント<a class="hash-link" href="#vpcエンドポイント" title="見出しへの直接リンク">​</a></h2><p>VPCエンドポイントは、サポート対象のAWSサービスなどにVPCをプライベートに接続可能な仮想デバイスのこと。Virtual Private Cloud (VPC) とサポートされているサービスの間の接続が有効になる。 <code>ゲートウェイエンドポイント</code> と <code>インターフェースエンドポイント</code> の2種類あり。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="ゲートウェイエンドポイント">ゲートウェイエンドポイント<a class="hash-link" href="#ゲートウェイエンドポイント" title="見出しへの直接リンク">​</a></h3><p>VPCにインターネットゲートウェイや NATデバイスを必要とせずに、<code>Amazon S3</code>  および <code>DynamoDB</code> への信頼性の高い接続を提供する。</p><p><img loading="lazy" src="https://i.gyazo.com/0045396f813dd6e8dd40e2365f8adb55.png" alt="vpc-endpoint-s3-diagram" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="インターフェイスエンドポイント">インターフェイスエンドポイント<a class="hash-link" href="#インターフェイスエンドポイント" title="見出しへの直接リンク">​</a></h3><p>VPC内にインターフェイスを設置して、インターネットゲートウェイを介さずに、VPC外(AWS通信網内)のサービスにアクセスするための機能のこと。</p><p>下記例では、プライベートDNSの有効/無効時のVPC外の接続方法の違いを説明している。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="プライベートdnsを使わない場合">プライベートDNSを使わない場合<a class="hash-link" href="#プライベートdnsを使わない場合" title="見出しへの直接リンク">​</a></h3><p>デフォルトの DNS 名を使用して AWS リージョンのパブリック IP アドレス空間経由で Amazon Kinesis Data Streams と通信。</p><p><img loading="lazy" src="https://i.gyazo.com/11cb450d2127c9258af4e3bd611add5f.png" alt="vpc-endpoint-kinesis-diagram" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="プライベートdnsを使った場合">プライベートDNSを使った場合<a class="hash-link" href="#プライベートdnsを使った場合" title="見出しへの直接リンク">​</a></h3><p>デフォルトの DNS ホスト名またはエンドポイント固有の DNS ホスト名を使用して、インターフェイスエンドポイントを介して Amazon Kinesis Data Streams にリクエストを送信。</p><p><img loading="lazy" src="https://i.gyazo.com/c74bcb5ec4f44f6a9617374aad8039d5.png" alt="vpc-endpoint-kinesis-private-dns-diagram" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="vpcピアリング">VPCピアリング<a class="hash-link" href="#vpcピアリング" title="見出しへの直接リンク">​</a></h2><p>2つのVPC間でプライベートな接続を可能にするネットワーキング機能。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[最新docker-composeをインストールするコマンド]]></title>
            <link>https://mt2m10.github.io/2022/04/21/_1</link>
            <guid>/2022/04/21/_1</guid>
            <pubDate>Thu, 21 Apr 2022 07:53:00 GMT</pubDate>
            <description><![CDATA[WSL2でインストールするときなど、いつも次のようにインストールしてました。]]></description>
            <content:encoded><![CDATA[<p>WSL2でインストールするときなど、いつも次のようにインストールしてました。</p><ul><li><a href="https://docs.docker.com/compose/install/" target="_blank" rel="noopener noreferrer">公式ページ</a> のインストール手順に従って進める</li><li>手順の中にdocker-compose版の最新バージョンを確認する手順があるのでGitHubにいって最新版を確認する</li><li>URLに含まれるversionを差し替える</li><li>インストールする</li></ul><p>この手順2,3が個人的にとても面倒です。
次のコマンドを上から実行するだけで最新版がインストールできます。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="前提条件">前提条件<a class="hash-link" href="#前提条件" title="見出しへの直接リンク">​</a></h2><ul><li><code>jq</code> インストール済み</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="コマンド">コマンド<a class="hash-link" href="#コマンド" title="見出しへの直接リンク">​</a></h2><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">version=$(curl https://api.github.com/repos/docker/compose/releases/latest | jq .name -r)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">output='/usr/local/bin/docker-compose'</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">curl -L https://github.com/docker/compose/releases/download/$version/docker-compose-$(uname -s)-$(uname -m) -o $output</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">chmod +x $output</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">docker-compose --version</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考">参考<a class="hash-link" href="#参考" title="見出しへの直接リンク">​</a></h2><ul><li><a href="https://jpdebug.com/p/2463571" target="_blank" rel="noopener noreferrer">docker-composeの最新Verでインストール</a></li></ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[日記]]></title>
            <link>https://mt2m10.github.io/2022/04/12/_1</link>
            <guid>/2022/04/12/_1</guid>
            <pubDate>Tue, 12 Apr 2022 11:35:00 GMT</pubDate>
            <description><![CDATA[妻が急遽手術して週末まで入院することになった。]]></description>
            <content:encoded><![CDATA[<p>妻が急遽手術して週末まで入院することになった。</p><p>3月下旬から定期的に左の下腹部の痛くなるので、消化器内科や婦人科系のクリニックで見てもらったりしてたけど、問題なしと診断されていた。</p><p>けど、昨日から痛みが出てきたので大きめの病院の婦人科で見てもらったら、子宮外妊娠と診断され緊急で手術することになった。手術は1時間程度で終わり無事成功。</p><p>妻は本当に痛そうだったので心配してたんけど、ようやく原因が分かったし処置できたので一安心。退院したらいっぱい美味しいものを一緒に食べに行こうと思う。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[PHPで数値判定をするときは"e"に気をつけよう]]></title>
            <link>https://mt2m10.github.io/2022/04/10/_1</link>
            <guid>/2022/04/10/_1</guid>
            <pubDate>Sun, 10 Apr 2022 08:00:00 GMT</pubDate>
            <description><![CDATA[指数表現を理解していなかったために間違ってしまった問題があったのでメモ。]]></description>
            <content:encoded><![CDATA[<p>指数表現を理解していなかったために間違ってしまった問題があったのでメモ。</p><p>少し実装方法に触れてるのでアウトだったら消します。</p><p>paizaラーニングの問題<a href="https://paiza.jp/works/challenges/513/retry" target="_blank" rel="noopener noreferrer">B104:データのクレンジング</a>で次の条件がありました。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">今回行うクレンジングでは、回答が 0 以上 100 以下の整数ではないデータをすべて取り除きます。なお、先頭に 0 がついているデータ (035 など) は有効です。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>上記説明を簡単にいうと、インプットの文字列が0以上100以下の整数であるかをチェックする必要があるということです。
インプット文字列は以下の条件を満たします。</p><ul><li>-1,000 ≦ s_{i, j} ≦ 1,000 または、「英字小文字 / 数字」からなる文字列</li><li>1 ≦ 文字列 s_{i, j} の長さ ≦ 5</li></ul><p>このチェックを以下のように実装しました。</p><div class="language-php codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-php codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">function hoge(string $value): bool</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">{</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    if (!is_numeric($value))</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        // 数値文字列判定</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        // $valueに英字が含まれている場合にfalseを返す</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        return false;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    $value = intval($value);</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    // 0 以上 100 以下を判定</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    return ($value &gt;= 0 &amp;&amp; $value &lt;= 100);</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>しかし、この実装で提出するとエラーとなるパターンがありました。それが、eを含むときです。
PHPではeを指数表記として利用しています。例えば次の文字列は数値文字列として判定されます。</p><ul><li>3e1</li><li>1e2</li></ul><p>REPLを使って確認してみます。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">php &gt; echo 3e1;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">30</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">php &gt; echo 1e1;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">10</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">php &gt; var_dump(is_numeric("3e1"));</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">bool(true)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">php &gt; var_dump(is_numeric("1e2"));</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">bool(true)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>そのため、整数チェックをする場合、次のうちどちらかを採用するのが良さそうです。</p><ul><li>ctype_digit 関数で数値チェックをする</li><li>preg_match 関数を使って正規表現でチェックする</li></ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[日記]]></title>
            <link>https://mt2m10.github.io/2022/04/09/_1</link>
            <guid>/2022/04/09/_1</guid>
            <pubDate>Fri, 08 Apr 2022 23:09:00 GMT</pubDate>
            <description><![CDATA[数日前からpaizaからスカウトメールが来るようになった。最後にやったのは2年前だし全然更新してないのに何故かよくメールが届く。]]></description>
            <content:encoded><![CDATA[<p>数日前からpaizaからスカウトメールが来るようになった。最後にやったのは2年前だし全然更新してないのに何故かよくメールが届く。</p><p>これをきっかけに<a href="https://paiza.jp/challenges" target="_blank" rel="noopener noreferrer">プログラミングスキルチェック</a>を少しやってみることにした。スコアやレーティングは意識せず継続的に続けていきたい。多分無理だけど。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[NordVPNで接続できないサイトがあったので設定を変えてみた]]></title>
            <link>https://mt2m10.github.io/2022/04/06/_1</link>
            <guid>/2022/04/06/_1</guid>
            <pubDate>Tue, 05 Apr 2022 22:30:00 GMT</pubDate>
            <description><![CDATA[対応方法]]></description>
            <content:encoded><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="対応方法">対応方法<a class="hash-link" href="#対応方法" title="見出しへの直接リンク">​</a></h3><ul><li>VPNプロトコルはOpenVPNorIKEv2を使う</li></ul><p>先日<a href="https://nordvpn.com" target="_blank" rel="noopener noreferrer">NordVPN</a>の2年間プランを購入しました。実際に使ってみるとVPN未接続では繋がるのに、VPN接続中では繋がらないサイトがちょくちょくありました。</p><p>結論としてはVPNプロトコルNordLynx以外のプロトコルを使うようにしたら問題は解決できました。</p><p>デフォルトではNordLynxとなっています。NordLynxは最新の技術でありパフォーマンスに優れているとのことです。しかし、サイトに繋がらないのでは意味がないので、OpenVPNとIKEv2でVPNを使っていこうと思います。</p><p>繋がらないのは日本のサイトだったので、もしかしたら国が関係しているかもしれません。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[日記]]></title>
            <link>https://mt2m10.github.io/2022/03/21/_1</link>
            <guid>/2022/03/21/_1</guid>
            <pubDate>Mon, 21 Mar 2022 05:17:44 GMT</pubDate>
            <description><![CDATA[3/19(土)に3回目のワクチン接種をしてきた。副反応としては37℃程度の熱と節々の痛みのみ。接種後20時間後ぐらいにロキソニン飲んだらそこからは体の不調もなく終了。4回目の接種時もこんな感じだったらいいな。]]></description>
            <content:encoded><![CDATA[<p>3/19(土)に3回目のワクチン接種をしてきた。副反応としては37℃程度の熱と節々の痛みのみ。接種後20時間後ぐらいにロキソニン飲んだらそこからは体の不調もなく終了。4回目の接種時もこんな感じだったらいいな。</p><p>浅草キッド見た。深見千三郎が主役の映画って感じ。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[『外資系コンサルが教えるプロジェクトマネジメント』]]></title>
            <link>https://mt2m10.github.io/2022/02/13/_Project-management-taught-by-foreign-consultants</link>
            <guid>/2022/02/13/_Project-management-taught-by-foreign-consultants</guid>
            <pubDate>Sun, 13 Feb 2022 11:46:53 GMT</pubDate>
            <description><![CDATA[約10年、IT業界で働いていますが、リーダーというものがやってこずこれまで来ました。さすがにそろそろやりそうなので、事前に必要な知識を得たいと思い、この書籍を購入しました。]]></description>
            <content:encoded><![CDATA[<p>約10年、IT業界で働いていますが、リーダーというものがやってこずこれまで来ました。さすがにそろそろやりそうなので、事前に必要な知識を得たいと思い、この書籍を購入しました。</p><p>プロジェクトをリーダーとしてやっていくために気をつけていくことが実体験や歴史的事例を基に分かりやすく書いてあります。</p><p>以下は私が本書で気になった部分の抜粋です。（自分用メモ）</p><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="第1章-プロジェクトは始まる前にすべてが決まる">第1章 プロジェクトは始まる前にすべてが決まる<a class="hash-link" href="#第1章-プロジェクトは始まる前にすべてが決まる" title="見出しへの直接リンク">​</a></h2><ul><li>目的が不明確なプロジェクトはポシャる可能性が高い。「目的」がないと大きく二つの問題が起きる。<ol><li>プロジェクトに問題が起こったとき迂回路を取れないという問題が発生する。</li><li>チームメンバーの管理が難しくなる。</li></ol></li><li>「問題」とは「現状と理想のギャップ」なので、「問題」を議論するということは「何を、どう変えたいのか」ということを議論するということ。目的をはっきりさせないと、人はどうしてもどこかでシラケてしまい、熱量を維持することができないくなる。</li><li>プロジェクトに必要な人材の質と量に対して、ちょうど100%になるようなチーム体制では必ず破綻する。なぜなら、機器対応できないから。何らかの想定外の事象が発生したとき、ギリギリのメンバー構成では対処できず、プロジェクトが破綻する。70%ぐらいの稼働率が理想的。</li><li>成功も失敗も、リーダーの評価になる。プロジェクトが成功すれば、すべては丸く収まり、失敗すれば、すべてはリーダーの責任になる。</li><li>プロジェクトメンバー全員が、物理的にいっしょにいられるかどうかで、業務効率は大きく変わる。想定通りに進んでいる場合はいいが、プロジェクトの難易度が高く、当初の想定通りにはいかない局面がでてきたばあいのコミュニケーション労力が大きく変わる。</li><li>リーダーはプロジェクトの目的を明確化する必要がある。チームが掲げる目標には三つのタイプがある。<ul><li>合理的計算型</li><li>ビジョン型</li><li>ランダム試行型</li></ul></li><li>強い組織は上記三つのパターンをうまく組み合わせている。</li><li>人間は、意義を感じない仕事には情熱を持って取り組めない</li><li>プロジェクトデザインにおいて、排除できるリスクについてはできる限り排除する</li><li>チームの稼働には、ある程度「遊び」があったほうが生産性が高くなる</li><li>「プロジェクトオーナーは誰か」「その人はそもそもどんな問題意識を持っているのか」「このプロジェクトにどんな期待をしているのか」を明らかにすることが重要。これを知るには単純に「聞く」しかない。「言語化」が大事。=&gt; プロジェクトオーナーの期待値と問題意識を把握する。</li><li>プロジェクト内部における仕事や役割において、優劣や上下の感覚を許さない</li><li>参画するメンバーの懸念や期待を把握する</li><li>評判の良くないメンバーであっても、そのメンバーの「成長余力」を信じて接してあげる</li><li>「マタイ効果」を意識する</li><li>関係者の期待値より高い結果に終われば「成功」であり、関係者の期待値より低い結果に終われば「失敗」</li><li>プロジェクト関係者の裏マップをつくる。この辺に無頓着なメンバーは意外と多い。</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="第2章-プロジェクト序盤に注意すべきこと">第2章 プロジェクト序盤に注意すべきこと<a class="hash-link" href="#第2章-プロジェクト序盤に注意すべきこと" title="見出しへの直接リンク">​</a></h2><ul><li>最初期のミーティングでは期待値を超え、「貯金」をつくる</li><li>ことあるごとに「目的」に立ち返らせる。プロジェクトの開始段階で、チームメンバーに目的を浸透させる。ことあるごとに意識させ、「自分で答えに至る」感覚を覚えさせること。</li><li>メンバーの士気が低いのはリーダーのせい。士気を高い水準に保つリーダーの特徴として2つある<ol><li>プロジェクトがどのような意義を持っているのかを継続的にリマインドさせる</li><li>期待役割の明確化</li></ol></li><li>関係者を不安にさせない</li><li>チーム形成のプロセスの例としてタックマンモデルがよく知られている<ul><li>フォーミング（形成期）</li><li>ストーミング（混乱期）</li><li>ノーミング（規律確立機）</li><li>パフォーミング（活動期）</li></ul></li><li>ストーミング（混乱期）を早期に乗り切るには、リーダーによるチーム憲章の宣言が有効</li><li>チームの力量が高いチームの要素の一つは「チーム内で流通する『情報の量』」が多い。メンバー同士の「横のコミュニケーション」が活発化されると、チームの自律性はより高まり、情報量は大きくなる。</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="第3章-プロジェクトをうまく着陸させる">第3章 プロジェクトをうまく「着陸」させる<a class="hash-link" href="#第3章-プロジェクトをうまく着陸させる" title="見出しへの直接リンク">​</a></h2><ul><li>「メンバーの時間」にはデリケートな配慮が必要。</li><li>リーダーはメンバーに相談されるようになったほうがよい。そのためにはとにかく「聞く」こと</li><li>キーマンとは月に1回程度コミュニケーションをとり、プロジェクトの向かっている方向に大きなズレがないことを確認する。</li><li>定例会議では「やったこと」ではなく「その時点での結論」を出す</li><li>直感的に「何かがおかしい」と感じたときは早めに共有する</li><li>プロジェクトが進行していくに従って、プロジェクトが当初掲げた目的や問題からズレていってしまう、というのはよくあること。リーダーは遠くのゴールを見据えてそれをブレさせないようにする。</li><li>「最初に立てたお題にはこだわり続ける」必要があるが、当初考えていた仮設やアプローチがうまくいなかいということがわかったときは、迅速にそれを認めて仮設を作り直す、あるいは別のアプローチを考えることも必要。自らの考え方が誤っていたことを認め、変化を受け入れる。</li><li>プロジェクトでトレードオフとなる要素は「時間」「コスト」「品質」</li><li>メンバーへのフィードバックは「その場で」が基本。「自分のやった行動」と「結果のフィードバック」は、時間軸が短ければ短いほどいい</li><li>メンバーには「行動」ではなく「目的」を伝える。力量が足りていない、まだ未熟だという人には「目的と行動」を一緒に伝える。</li><li>フィードバックの基本は「行動＝ドゥーイング」について指摘する。「どうあれば＝ビーイング」の指摘ではない。</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="第4章-計画を成功に導くリーダーシップ">第4章 計画を成功に導くリーダーシップ<a class="hash-link" href="#第4章-計画を成功に導くリーダーシップ" title="見出しへの直接リンク">​</a></h2><ul><li>慕われるだけのリーダー」でも「恐れられるだけのリーダー」でもダメで、両者を高次元でバランスさせているリーダーこそ、良いリーダー</li><li>優れたリーダーは必ず嫌われる。敵がいないリーダーなどありえない</li><li>「場をコントロールする」という意識をもつ。みんなから自然とリーダーとされる人の特徴は「一番先に話し始めた人」ということ</li><li>必要なときに「助けてください」と声をあげること</li><li>いつも上機嫌でいること。そうすることで、メンバー相互間、あるいはメンバーとリーダーとの間での情報量が増加する。</li><li>メンバーを他人と比較することはしない。過去の自分（メンバー）と今の自分（メンバー）を比較する</li><li>「率先垂範（人の先頭に立って物事を行い、模範を示すこと）」によって、組織は活性化するどころか、むしろ停滞する。</li><li>なにか失敗したときは、「犯人探し」よりも「原因究明」に軸足を置く</li></ul>]]></content:encoded>
            <category>書籍</category>
            <category>プロジェクトマネジメント</category>
        </item>
        <item>
            <title><![CDATA[『ユーザー中心論〜あなたからはじめる心を動かすモノづくり〜』]]></title>
            <link>https://mt2m10.github.io/2022/01/29/_User-centered-theory-Manufacturing-that-moves-the-heart-starting-from-you</link>
            <guid>/2022/01/29/_User-centered-theory-Manufacturing-that-moves-the-heart-starting-from-you</guid>
            <pubDate>Sat, 29 Jan 2022 11:57:56 GMT</pubDate>
            <description><![CDATA[ユーザーの課題を解決する、より良いものを提供する、といった観点で何か知りたいと思い、この書籍を購入しました。]]></description>
            <content:encoded><![CDATA[<p>ユーザーの課題を解決する、より良いものを提供する、といった観点で何か知りたいと思い、この書籍を購入しました。</p><p>なんとなく知っているようでもやもやしていたことを、うまく言語化し、わかりやすく説明された本だなーといった印象です。</p><p>仕事をしていく上で、うまくいかなくなったとき改めて読んでみると解決の糸口をつかめるような、素晴らしい一冊でした。</p><p>{{&lt; blogcard "<a href="https://www.amazon.co.jp/dp/B091XV3RXQ%22" target="_blank" rel="noopener noreferrer">https://www.amazon.co.jp/dp/B091XV3RXQ"</a> &gt;}}</p><p>以下は私が本書で気になった部分の抜粋です。（自分用メモ）</p><hr><ul><li>ユーザーが多様なニーズを持つ現代においては、さまざまな人が共通のユーザー視点を持つことで、ユーザーに新しい価値を届けることができる</li><li>ユーザー視点を組織全体で持つことが、価値の創造につながる</li><li>価値は隣人や組織を通じてユーザーに届く</li><li>フレームワークは守破離の精神で使ってこそ活きる</li><li>ユーザー自身が気づいていない潜在意識に潜むニーズ、を把握して、ユーザー自身の心や体験に働きかける価値（意味的価値）を見つけ出すことが必要</li><li>機能の持つ価値がユーザーの心を揺さぶって、はじめて意味的価値は生まれる
※意味的価値: その機能がユーザーの感情を揺さぶった結果生まれた価値</li><li>自身が持つ <strong>無意識のバイアス</strong> を自覚することが、ユーザー視点に立った観察をはじめる第一歩</li><li>「共感（Empathy）からはじまるユーザー視点」を持ってユーザーへの深い動作を続けることで、正しいユーザー視点を身につけることができる</li><li>共創を生む組織では、メンバーが持っている以上の能力を発揮したり、誰も思いつかなかったアイデアが生まれたりする</li><li>ユーザーに価値を提供するためには、プロダクトだけにではなく、組織そのものに注目しなければならない</li><li>それぞれの立場の支店からモノを評価するのではなく、評価する視点を組織でひとつにまとめることが大事。互いの視点がそろっていないとロスが生まれる</li><li>どんな立場のメンバーであっても、それぞれの「よいモノ」の先には同じユーザーがいる。ユーザー視点は、組織のモノづくりの共通の視点になりうる</li><li>さまざまな角度からユーザーに視点をそろえることで組織は成長する</li><li>ビジョンは、「なぜそれをするのか？」という本質的な目的</li><li>モノづくりのビジョンが実現したとき、その「誰か」にどんな喜びを与えることができるのか。これを具体化していく。</li><li>ユーザー中心なモノづくりでは、対象ユーザーをプロトペルソナという手法でさらに具体化する</li><li>ビジネスのサイクルとは、「価値」を提案して「ユーザー」が集まり「収益」が生まれている状態。「価値」があるから「ユーザー」があつまり、「ユーザー」が集まるからこそ「収益」が上がる</li><li>多くのユーザーに利用してもらえれば、健全なマネタイズのサイクルが生まれる</li><li>組織は大きくなればなるほど、いくつかの実行部隊＝チームに分割される</li><li>つくるべきモノが明確であれば、「役割別チーム」が理にかなった体制。つくるべきモノがの正解が見えづらい現代では、新しいユーザー価値を生み出すための共創不可欠。そこで「目的別チーム」を構成することで共創が生まれやすくなる。</li><li>チームがひとつの方向に進むためには目標設定が重要</li><li>さまざまな背景を持つメンバーが同じ視点をもって自律的に行動するためには、OKR（Objectives and Key Results）という手法が有効</li><li>OKRで重要なのは、チームがワクワクできる目標を言葉にできているかという点</li><li>現場でモノをつくるチーム全体でさまざまなルートを検討し、軌道修正を繰り返して、新しいユーザー価値に少しずつ近づいていくことができる</li><li>プロトタイピングは「検証可能な最小限のプロダクト（MVP：Minimum Viable Product）」ができたら、すぐユーザーに使ってもらい、目指す方向でなければ別のMVPを試すサイクルのこと</li><li>プロトタイピングを何度も繰り返せば、多くの失敗が積み上がり、仮設が正しいかどうかを徐々に知ることができる</li><li>こまめな軌道修正を繰り返しながら大きな目標に挑む</li><li>よいカルチャーはメンバーの自律性を育み、競争力を向上させる</li><li>「言葉」は、チームの視点をそろえるための土台となる最小単位のツール</li><li>人は多くのものごとを無意識に見て生活している。「意識して見る」ことで「気づき」が生まれる</li><li>組織を変えるときは、流れに逆らうのではなく寄り添って変えていく。川に投げ入れた小石のように組織を変える</li><li>組織の成長フェーズには「形成期」「混乱期」「統一期」「機能期」の4段階がある（タックマンモデル）</li><li>ユーザー中心な組織は、この組織成長フェーズを「ユーザー視点」という軸で統一し、共創からユーザー価値を生み出すことを目指す</li><li>一見大きく見える課題でも、注意深く観察すると小さな課題の集合であることに気づく。まずは大きく見える課題を自分ひとりで解決できるサイズにまで分解する</li><li>ユーザー中心なマインドセットを、組織で一緒に働く仲間にも向けてみる</li><li>メンバーを理解するには、相手への深い共感が必要。メンバーに影響を与えるのはあなた自身</li><li>大きな目的に軌道修正を繰り返すのは、モノづくりも組織づくりも同じ</li><li>普段何気なく行っている「無意識の振る舞い」を「意識的な振る舞い」に変えていくことがユーザー中心な組織へのムーブメントにつながる</li><li>自身の「なぜ」を発信する。ヒトは本質的に『なぜ』という背景に心を動かされる</li></ul>]]></content:encoded>
            <category>書籍</category>
            <category>ユーザー</category>
        </item>
        <item>
            <title><![CDATA[Firefox終了時にBookmarkをエクスポート]]></title>
            <link>https://mt2m10.github.io/2022/01/18/_firefox-bookmarks-backup</link>
            <guid>/2022/01/18/_firefox-bookmarks-backup</guid>
            <pubDate>Tue, 18 Jan 2022 11:23:19 GMT</pubDate>
            <description><![CDATA[Firefox 終了時に Bookmark を HTML 形式で任意のディレクトリにエクスポートします。]]></description>
            <content:encoded><![CDATA[<p>Firefox 終了時に Bookmark を HTML 形式で任意のディレクトリにエクスポートします。</p><p><a href="https://addons.mozilla.org/en-GB/firefox/addon/xbs/" target="_blank" rel="noopener noreferrer">xBrowserSync</a> を使ってたらブックマークがたくさん消えてしまった経験があるため、定期的にバックアップをとりたいって思いました。</p><p><code>about:config</code> の設定をすれば対応できるのがわかったので設定手順を残します。</p><ol><li><a href="about:config" target="_blank" rel="noopener noreferrer">about:config</a> を開く</li><li>以下設定をする
| key | value |
| -------------------------------- | -------------------------------------------- |
| browser.bookmarks.autoExportHTML | true |
| browser.bookmarks.file | 保存先のパス（ファイル名含む） |</li><li>Firefox を再起動する。</li></ol><p>これで、Firefox 終了時に保存先パスにエクスポートされます。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考">参考<a class="hash-link" href="#参考" title="見出しへの直接リンク">​</a></h2><ul><li><a href="http://wasure.net/autofox/" target="_blank" rel="noopener noreferrer">Firefox のブックマークを終了時に html 形式で自動保存する方法とその保存先の変更方法</a></li></ul>]]></content:encoded>
            <category>firefox</category>
        </item>
        <item>
            <title><![CDATA[『自己肯定感という呪縛』]]></title>
            <link>https://mt2m10.github.io/2022/01/16/_The-curse-of-self-affirmation</link>
            <guid>/2022/01/16/_The-curse-of-self-affirmation</guid>
            <pubDate>Sun, 16 Jan 2022 10:49:43 GMT</pubDate>
            <description><![CDATA[転職活動をしていると、自分の強みが分からず悩んでいました。自己肯定感が低いから強みが見つからないのだろうと思い、この書籍を購入しました。]]></description>
            <content:encoded><![CDATA[<p>転職活動をしていると、自分の強みが分からず悩んでいました。自己肯定感が低いから強みが見つからないのだろうと思い、この書籍を購入しました。</p><p>自己肯定感がどういうものなのか、自己肯定感を高めるにはどうしたらいいかを、心理学調査や文化的背景を踏まえながら説明してくれています。</p><p>本書の中で、不安になることは悪くなく、むしろ成長のためには必要、的なことが書かれていて、ネガティブ思考な私としては救われたような気持ちになりました。</p><p>{{&lt; blogcard "<a href="https://www.amazon.co.jp/dp/B09N91B8XZ/%22" target="_blank" rel="noopener noreferrer">https://www.amazon.co.jp/dp/B09N91B8XZ/"</a> &gt;}}</p><p>以下は私が本書で気になった部分の抜粋です。（自分用メモ）</p><hr><h3 class="anchor anchorWithStickyNavbar_LWe7" id="第1章--安易な自己肯定感を高めないと信仰の落とし穴">第1章 | 安易な「自己肯定感を高めないと」信仰の落とし穴<a class="hash-link" href="#第1章--安易な自己肯定感を高めないと信仰の落とし穴" title="見出しへの直接リンク">​</a></h3><ul><li>自己肯定感とは、生まれ落ちた文化のもとで生き抜く力をつけていくことによって得られるもの。</li><li>つまり、自己肯定感が高いということは、「適応力があること」を意味し、自信をもって社会に向かっていけることにつながる。</li><li>向上心が強い人は、自己肯定感がそこまで高くない傾向にある。逆に向上心が低い人は、自己肯定感が高くなっている。</li><li>自己肯定感はただ高ければいいというようなものではない。ただ褒めるだけでは真の自己肯定感は得られない</li><li>褒めれば自己肯定感が高まるというのは幻想にすぎない。こどもに対して褒めて育てて叱らない考え方が広まっている。その結果、打たれ弱く、傷つきやすくなり、きつい状況で頑張れなくなっている。</li><li>向上心や能力を認め、成長していくように期待を込める、つまり成長していく存在として認めることが大切。</li><li>人から期待されると自然と頑張るもの。そこに適応感や達成感が得られれば、自己肯定感が高まる。</li><li>期待に応えられず傷ついているときこそ、向上心をもって頑張る姿勢、頑張ったプロセスを評価し、認めてあげることが大切</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="第2章--欧米人の自己肯定感は高いはほんとうか">第2章 | 「欧米人の自己肯定感は高い」は、ほんとうか？<a class="hash-link" href="#第2章--欧米人の自己肯定感は高いはほんとうか" title="見出しへの直接リンク">​</a></h3><ul><li>欧米人は自己肯定感が高く、日本人は自己肯定感が低いという調査結果が出ているが、文化的要因が関係している。<ul><li>アメリカの幼稚園・保育園の先生や園児の保護者は、「自信」をもてる子になることが最も大切だとしている</li><li>日本の幼稚園・保育園の先生や園児の保護者は、「共感・同情・他の人への心配り」ができる子になることが最も大切だとしている。</li></ul></li><li>「生徒の学習到達調査（PISA）」でアメリカと日本を比較した場合、日本 &gt; アメリカとなっている。欧米人の自己肯定感が高さは自分を過大評価する心理を反映している。</li><li>意識調査を日本語で答える場合と、英語で答える場合で回答傾向が違ってくる。</li><li>できない人ほど楽観的で、自分の能力を実際以上に見積もり、できる人ほど不安が強く、自分の能力を実際以下に見積もる。</li><li>日本で自己肯定感の向上といって褒めることばかりしても、文化的背景的に合わず、傷つきやすく、心が折れやすい子どもや若者が増えてしまった。</li><li>本来、日本人は忍耐強い。感情をできるだけ抑制して相手に気をつかわせないようにする。</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="第3章--自己肯定感が高くないと幸せになれないという幻想">第3章 | 「自己肯定感が高くないと幸せになれない」という幻想<a class="hash-link" href="#第3章--自己肯定感が高くないと幸せになれないという幻想" title="見出しへの直接リンク">​</a></h3><ul><li>自己肯定感を高める上で大切なことは、たとえ結果が出なくてもバンがっていることを認めてあげること、失敗してもそれを反省し、今後に生かそうとする姿勢を認めてあげること。</li><li>思春期から青春期に、自己否定しなつつ、もがき苦しむ中で、自己形成が進んでいく。その中でも成長しつつある自分を感じることが、真の自己肯定感につながっていく。</li><li>褒めることの弊害として、「自分は特別」という思いが強くなり、地道に頑張ることができないナルシスト的な性格になりやすい。</li><li>人とうまくやっていけるかどうかは、自己肯定感を大きく左右する要因と言える。社会規範が内面化されることで、社会への適応感が高まり、自らの社会性に誇りを感じるようになっていく。</li><li>下方比較というのは、自分より劣る人と比べることを指す。ひどく傷ついたときの一時的な対処法としては有効だが、こればかりに頼っていると、成長路線からいつの間にか逸れていってしまう。</li><li>上方比較というのは、自分より優れた人と比べることを指す。上方比較には向上心を刺激する効果がある。ほんとうに仕事ができる人、あるいは「できる人」になるための成長軌道に乗っている人は、無意識のうちに上方比較をしている。例としてトップアスリートが挙げられる。</li><li>「こんな自分じゃダメだ」というのは、表面上は自己否定であっても、ほんとうに自己否定しているわけではない</li><li>そこには自分に対して期待する気持ちがある。自分に期待しているからこそ、もっとマシな自分になろうと思う。さらに言えば、期待に応えられる自分だと信じているからこそ、今の自分じゃダメだと思える。</li><li>きつい状況に追い込まれても、諦めずに頑張ることによって、逆境を乗り越えることができた、という経験を積み重ねることで自己効力感が手に入る。ただ、頑張っても結果につながらない場合は、プロセスに目を向けるように促すことが大切。</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="第4章--成功者一流アスリートがもつ真の自己肯定感とは">第4章 | 成功者・一流アスリートがもつ真の自己肯定感とは？<a class="hash-link" href="#第4章--成功者一流アスリートがもつ真の自己肯定感とは" title="見出しへの直接リンク">​</a></h3><ul><li>成功者ほど、安易な自己肯定をしない</li><li>ネガティブな感情を感じるのは、悪いことではなく、むしろ高いモチベーションを持って取り組んでいる証拠と言える。</li><li>失敗を直視し、改善点を発見し、次につなげていくことで仕事力が高まっていく。</li><li>自己を肯定するなら、今の自分の力ややり方を肯定するのではなく、絶えず不安を抱えつつ今の自分を乗り越えようともがき苦しむ自分の姿勢こそ肯定すべき。</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="第5章--真の自己肯定感はこうして育まれる">第5章 | 「真の自己肯定感」はこうして育まれる<a class="hash-link" href="#第5章--真の自己肯定感はこうして育まれる" title="見出しへの直接リンク">​</a></h3><ul><li>自己肯定感というのは、あくまでも地道な努力の結果として自然に身につくものであって、小手先のテクニックで手に入るようなものではない。</li><li>自己評価の形成要因の整理。自己肯定感に関して言えば、これらの自己評価要因が絡み合って自己肯定感が形成されていく。<ol><li>他者から与えられた評価や評価的態度</li><li>他者との比較</li><li>実際の成功・失敗体験</li><li>理想とする自己像との比較</li></ol></li><li>自己肯定感を高めるキーワードは向上心と好奇心。</li><li>人生に挫折はつきもの。大事なのは打たれ強さを身につけること。</li><li>自己肯定感は他人との関係性の中で育まれていく。</li><li>ポジティブな空想は、それによって安心してしまい、気が緩み、モチベーションが低下するといったネガティブな効果をもつ可能性が高いと言えそう。</li><li>「不安の効用」を活用すれば、能力や質の向上にもつながる。</li><li>日本の仕事の着実さは、不安の強さがもたらしている。</li><li>自己を超えた何ものかのために検診することが大切。だれかのために役に立っている自分、世の中のためになることに必死に取り組んでいる自分、そんな自分を感じるとき、自然に自己肯定感が高まっていく。</li></ul>]]></content:encoded>
            <category>書籍</category>
            <category>自己肯定感</category>
        </item>
        <item>
            <title><![CDATA[AfterShokzのOPENCOMMを購入]]></title>
            <link>https://mt2m10.github.io/2022/01/15/_aftershokz-opencomm</link>
            <guid>/2022/01/15/_aftershokz-opencomm</guid>
            <pubDate>Sat, 15 Jan 2022 00:07:02 GMT</pubDate>
            <description><![CDATA[1月の初めにAmazonセールでAfterShokzのOPENCOMMが安くなってたので購入しました！]]></description>
            <content:encoded><![CDATA[<p>1月の初めにAmazonセールでAfterShokzのOPENCOMMが安くなってたので購入しました！
19998円 → 14998円</p><p><img loading="lazy" src="https://i.gyazo.com/f882bd7a222465e7c20c0d565787379d.jpg" alt="PXL_20220106_103308519" class="img_ev3q"><img loading="lazy" src="https://i.gyazo.com/191074b0fe29165c71967c6dbc5e2085.jpg" alt="PXL_20220106_102948612" class="img_ev3q"></p><p>骨伝導イヤホンは同社のOPENMOVEを2ヶ月前に買って使い心地が良かったので、今回はWeb会議用に購入。仕事のミーティングや転職の面接で使っていますが今のところ問題はなさそう。</p><p>イヤホン・マイクともに問題ないので気になっている人は試してみる価値はありますね。</p><p>概ね満足しているのですが、1つ欠点と思ってるところは、パーカーなどフードがある服を着ているときは、バンドが当たって定位置からズレてしまうとこです。</p><p>それを踏まえてもとても良いイヤホンです。これからも長く使っていきたいと思います。</p>]]></content:encoded>
            <category>イヤホン</category>
        </item>
        <item>
            <title><![CDATA[AWS SDK for PHP を使ってメール送信]]></title>
            <link>https://mt2m10.github.io/2022/01/08/_aws-ses-for-php</link>
            <guid>/2022/01/08/_aws-ses-for-php</guid>
            <pubDate>Sat, 08 Jan 2022 05:26:00 GMT</pubDate>
            <description><![CDATA[Amazon SES を初めて使ったのでメモ。]]></description>
            <content:encoded><![CDATA[<p>Amazon SES を初めて使ったのでメモ。
regionが<code>Asia Pacific (Tokyo)</code>の場合は制限があるみたいなので注意。</p><table><thead><tr><th>最大送信量</th><th>1日あたりの送信割り当て</th></tr></thead><tbody><tr><td>1秒あたり1通</td><td>24時間あたり200通</td></tr></tbody></table><h3 class="anchor anchorWithStickyNavbar_LWe7" id="前提">前提<a class="hash-link" href="#前提" title="見出しへの直接リンク">​</a></h3><ul><li><a href="https://aws.amazon.com/jp/sdk-for-php/" target="_blank" rel="noopener noreferrer">AWS SDK for PHP</a>がインストール済みであること<ul><li><a href="https://docs.aws.amazon.com/sdk-for-php/v3/developer-guide/getting-started_installation.html" target="_blank" rel="noopener noreferrer">インストール方法</a></li></ul></li><li>Amazon SES でVerified済みのメールアドレスがあること</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="コード">コード<a class="hash-link" href="#コード" title="見出しへの直接リンク">​</a></h3><div class="language-php codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-php codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">&lt;?php</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">require 'vendor/autoload.php';</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$client = new \Aws\Ses\SesClient([</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    'version' =&gt; 'latest',</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    'region' =&gt; 'ap-northeast-1',</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    'credentials' =&gt; [</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        'key'    =&gt; 'hogehoge',</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        'secret' =&gt; 'fugafuga',</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    ],</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">]);</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$from = 'from@example.com'; // Amazon SESでVerifiedしたメールアドレス</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$to = 'to@example.com';</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$charset = 'UTF-8';</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$subject = '件名';</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$body = '本文';</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$result = $client-&gt;sendEmail([</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    'Destination' =&gt; [</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        'ToAddresses' =&gt; [$to],</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    ],</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    'ReplyToAddresses' =&gt; [$from],</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    'Source' =&gt; $from,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    'Message' =&gt; [</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        'Body' =&gt; [</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            'Text' =&gt; [</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                'Charset' =&gt; $charset,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                'Data' =&gt; $body,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            ],</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        ],</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        'Subject' =&gt; [</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            'Charset' =&gt; $charset,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            'Data' =&gt; $subject,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        ],</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    ],</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">]);</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">// 送信ID</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$messageId = $result['MessageId'];</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">echo "Email send. Message ID: {$messageId}\n" ;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>HTML形式で送信したい場合は、<code>Text</code>を<code>Html</code>にすればOK。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="参考">参考<a class="hash-link" href="#参考" title="見出しへの直接リンク">​</a></h3><ul><li><a href="https://docs.aws.amazon.com/aws-sdk-php/v3/api/class-Aws.Ses.SesClient.html" target="_blank" rel="noopener noreferrer">Class Aws\Ses\SesClient <!-- -->|<!-- --> AWS SDK for PHP v3</a></li><li><a href="https://officekaizen.tech/doku.php/aws/ses/aws-sdk%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%83%A1%E3%83%BC%E3%83%AB%E9%80%81%E4%BF%A1%E3%83%86%E3%82%B9%E3%83%88?s%5B%5D=ses" target="_blank" rel="noopener noreferrer">aws:ses:aws-sdkを使ってメール送信テスト</a></li></ul>]]></content:encoded>
            <category>php</category>
            <category>aws</category>
        </item>
        <item>
            <title><![CDATA[はてなブログカードを使ってカード型のリンクを貼る]]></title>
            <link>https://mt2m10.github.io/2022/01/04/_hatena-blog-card</link>
            <guid>/2022/01/04/_hatena-blog-card</guid>
            <pubDate>Tue, 04 Jan 2022 01:40:00 GMT</pubDate>
            <description><![CDATA[htmlにこれを書くだけでカード型リンクになります。]]></description>
            <content:encoded><![CDATA[<p>htmlにこれを書くだけでカード型リンクになります。</p><div class="language-html codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-html codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">iframe</span><span class="token tag" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token tag" style="color:rgb(255, 121, 198)">  </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">class</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">hatenablogcard</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token tag" style="color:rgb(255, 121, 198)">  </span><span class="token tag special-attr attr-name" style="color:rgb(241, 250, 140)">style</span><span class="token tag special-attr attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag special-attr attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag special-attr attr-value value css language-css property" style="color:rgb(255, 121, 198)">width</span><span class="token tag special-attr attr-value value css language-css punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token tag special-attr attr-value value css language-css number" style="color:rgb(255, 121, 198)">100</span><span class="token tag special-attr attr-value value css language-css unit" style="color:rgb(255, 121, 198)">%</span><span class="token tag special-attr attr-value value css language-css punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token tag special-attr attr-value value css language-css property" style="color:rgb(255, 121, 198)">height</span><span class="token tag special-attr attr-value value css language-css punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token tag special-attr attr-value value css language-css number" style="color:rgb(255, 121, 198)">155</span><span class="token tag special-attr attr-value value css language-css unit" style="color:rgb(255, 121, 198)">px</span><span class="token tag special-attr attr-value value css language-css punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token tag special-attr attr-value value css language-css property" style="color:rgb(255, 121, 198)">max-width</span><span class="token tag special-attr attr-value value css language-css punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token tag special-attr attr-value value css language-css number" style="color:rgb(255, 121, 198)">500</span><span class="token tag special-attr attr-value value css language-css unit" style="color:rgb(255, 121, 198)">px</span><span class="token tag special-attr attr-value value css language-css punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token tag special-attr attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token tag" style="color:rgb(255, 121, 198)">  </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">src</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">https://hatenablog-parts.com/embed?url=【ブログURL】</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token tag" style="color:rgb(255, 121, 198)">  </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">frameborder</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">0</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token tag" style="color:rgb(255, 121, 198)">  </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">scrolling</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">no</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag" style="color:rgb(255, 121, 198)">iframe</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>自分のブログでも使いたいけど、いちいち書くのが面倒だったので、<code>&lt;a&gt;</code>に<code>class="blogcard"</code>を定義したらカード型リンクになるような JavaScript を書いた。</p><div class="language-html codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-html codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">a</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">class</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">blogcard</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">href</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">xxxx</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag" style="color:rgb(255, 121, 198)">a</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">// jQueryです</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">$</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'a.blogcard'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">each</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">function</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> url </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">$</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">this</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">attr</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token template-string template-punctuation string" style="color:rgb(255, 121, 198)">`</span><span class="token template-string string" style="color:rgb(255, 121, 198)">href</span><span class="token template-string template-punctuation string" style="color:rgb(255, 121, 198)">`</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> iframe </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">$</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token template-string template-punctuation string" style="color:rgb(255, 121, 198)">`</span><span class="token template-string string" style="color:rgb(255, 121, 198)">&lt;iframe&gt;</span><span class="token template-string template-punctuation string" style="color:rgb(255, 121, 198)">`</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">addClass</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token template-string template-punctuation string" style="color:rgb(255, 121, 198)">`</span><span class="token template-string string" style="color:rgb(255, 121, 198)">hatenablogcard</span><span class="token template-string template-punctuation string" style="color:rgb(255, 121, 198)">`</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">attr</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token template-string template-punctuation string" style="color:rgb(255, 121, 198)">`</span><span class="token template-string string" style="color:rgb(255, 121, 198)">src</span><span class="token template-string template-punctuation string" style="color:rgb(255, 121, 198)">`</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(255, 121, 198)">`</span><span class="token template-string string" style="color:rgb(255, 121, 198)">https://hatenablog-parts.com/embed?url=</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(248, 248, 242)">${</span><span class="token template-string interpolation">url</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token template-string template-punctuation string" style="color:rgb(255, 121, 198)">`</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">attr</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token template-string template-punctuation string" style="color:rgb(255, 121, 198)">`</span><span class="token template-string string" style="color:rgb(255, 121, 198)">frameborder</span><span class="token template-string template-punctuation string" style="color:rgb(255, 121, 198)">`</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">attr</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token template-string template-punctuation string" style="color:rgb(255, 121, 198)">`</span><span class="token template-string string" style="color:rgb(255, 121, 198)">scrolling</span><span class="token template-string template-punctuation string" style="color:rgb(255, 121, 198)">`</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(255, 121, 198)">`</span><span class="token template-string string" style="color:rgb(255, 121, 198)">no</span><span class="token template-string template-punctuation string" style="color:rgb(255, 121, 198)">`</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">$</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">this</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token property-access">outerHTML</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> iframe</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token property-access">outerHTML</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">$</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">this</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">remove</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-css codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-css codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token selector" style="color:rgb(255, 121, 198)">iframe</span><span class="token selector class" style="color:rgb(255, 121, 198)">.hatenablogcard</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token property">width</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">100</span><span class="token unit">%</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token property">height</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">150</span><span class="token unit">px</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token property">max-width</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">500</span><span class="token unit">px</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="参考">参考<a class="hash-link" href="#参考" title="見出しへの直接リンク">​</a></h3><p>{{&lt; blogcard "<a href="https://dev.classmethod.jp/articles/embed-link/%22" target="_blank" rel="noopener noreferrer">https://dev.classmethod.jp/articles/embed-link/"</a> &gt;}}</p>]]></content:encoded>
            <category>html</category>
            <category>javascript</category>
        </item>
        <item>
            <title><![CDATA[Amazon Lambda Layer の作成]]></title>
            <link>https://mt2m10.github.io/2021/12/13/_create-lambda-layer</link>
            <guid>/2021/12/13/_create-lambda-layer</guid>
            <pubDate>Mon, 13 Dec 2021 12:37:00 GMT</pubDate>
            <description><![CDATA[まず、Amazon Lambda Layer とは下記のものです。]]></description>
            <content:encoded><![CDATA[<p>まず、<code>Amazon Lambda Layer</code> とは下記のものです。</p><blockquote><p>一言で言えば、複数のLambda関数でライブラリを共有できる仕組みです。</p></blockquote><p>Lambda の Python は標準である程度ライブラリが利用できるようになってますが、 pandas や numpy 、 requests など利用できないライブラリもあります。
「ライブラリを追加したい + 複数のLambdaで共有したい」ときに <code>Amazon Lambda Layer</code> を活用すると便利になります。
また、既存のライブラリ以外にも独自で作成したライブラリもLayer化すれば共有できるのでいい感じです。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="手順">手順<a class="hash-link" href="#手順" title="見出しへの直接リンク">​</a></h3><ol><li>ライブラリを ZIP にまとめる</li><li>AWS Lambda から レイヤーの作成を行う</li><li>Lambda関数からレイヤーを選択する</li></ol><p>以下、 requests を例に説明します。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="1-ライブラリを-zip-にまとめる">1. ライブラリを ZIP にまとめる<a class="hash-link" href="#1-ライブラリを-zip-にまとめる" title="見出しへの直接リンク">​</a></h4><p>ターミナル等から任意のディレクトリで以下を実行する。</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">mkdir python</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">pip install -t python requests</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">zip -r9 layer.zip python</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="2-aws-lambda-から-レイヤーの作成を行う">2. AWS Lambda から レイヤーの作成を行う<a class="hash-link" href="#2-aws-lambda-から-レイヤーの作成を行う" title="見出しへの直接リンク">​</a></h4><ol><li><a href="https://ap-northeast-1.console.aws.amazon.com/lambda/home" target="_blank" rel="noopener noreferrer">AWS Lambdaのコンソール</a>から 2. <code>その他リリース &gt; レイヤー</code> を選択する。</li><li>画面右上の <code>レイヤーの作成</code> ボタンからレイヤーの作成を行う。</li><li>各項目を適当に入力して、さっき作成したZIPファイルをアップロードし、<code>作成</code>ボタンを押す。これでレイヤーの作成は完了です。</li></ol><h4 class="anchor anchorWithStickyNavbar_LWe7" id="3-lambda関数からレイヤーを選択する">3. Lambda関数からレイヤーを選択する<a class="hash-link" href="#3-lambda関数からレイヤーを選択する" title="見出しへの直接リンク">​</a></h4><ol><li>requests を使いたいLambda関数を開き、<code>関数の概要</code> のところにある Layers を選択する。</li><li><code>レイヤーの追加</code> ボタンからさっき作成したレイヤーを選択する。</li><li><code>import requests</code> を定義すれば、利用できます。</li></ol><h1>参考</h1><ul><li><a href="https://dev.classmethod.jp/articles/lambda-layer-basics-how-it-works/" target="_blank" rel="noopener noreferrer">Lambda Layerの基本的な仕組みを確認する #reinvent</a></li><li><a href="https://sebenkyo.com/2021/05/21/post-1979/" target="_blank" rel="noopener noreferrer">【AWS】LambdaにrequestsライブラリをLayerで追加する</a></li></ul>]]></content:encoded>
            <category>aws</category>
            <category>lambda</category>
        </item>
        <item>
            <title><![CDATA[Firefoxからタブを非表示にする]]></title>
            <link>https://mt2m10.github.io/2021/12/08/_firefox-userChrome</link>
            <guid>/2021/12/08/_firefox-userChrome</guid>
            <pubDate>Wed, 08 Dec 2021 11:03:00 GMT</pubDate>
            <description><![CDATA[Firefox でタブを縦で使うために Tree Style Tab - ツリー型タブ をインストールしています。]]></description>
            <content:encoded><![CDATA[<p>Firefox でタブを縦で使うために <a href="https://addons.mozilla.org/ja/firefox/addon/tree-style-tab/" target="_blank" rel="noopener noreferrer">Tree Style Tab - ツリー型タブ</a> をインストールしています。
ただ、これを使うとタブが2箇所に表示されてて既存のタブが邪魔なので、<code>userChrome.css</code>を使って非表示にしたので、備忘録として残しておきます。</p><p><img loading="lazy" src="https://i.gyazo.com/a2d96af44058cf7387b2deedc83b638f.png" alt="Firefox before" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="userchromecss-の作成場所">userChrome.css の作成場所<a class="hash-link" href="#userchromecss-の作成場所" title="見出しへの直接リンク">​</a></h3><p>アドレスバーに<code>about:support</code>を入力してトラブルシューティング情報にアクセスする。
アプリケーション基本情報に <code>プロファイルフォルダー</code> とあるので、finder や explorer で開きます。</p><p><img loading="lazy" src="https://i.gyazo.com/0c9dc6a886d7cf0184904fa9c837ca65.png" alt="トラブルシューティング" class="img_ev3q"></p><p><code>プロファイルフォルダー</code> を開いたら、 <code>chrome</code> フォルダを作成します。 <code>userChrome.css</code> の作成場所になります。</p><p><img loading="lazy" src="https://i.gyazo.com/4143818f4faea5deed52ab217ddce39d.png" alt="finder" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="コード">コード<a class="hash-link" href="#コード" title="見出しへの直接リンク">​</a></h3><div class="language-css codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-css codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token atrule rule">@charset</span><span class="token atrule"> </span><span class="token atrule string" style="color:rgb(255, 121, 198)">"UTF-8"</span><span class="token atrule punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">/* chrome://browser/content/browser.xhtml */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">/* タブの非表示 */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token selector id" style="color:rgb(255, 121, 198)">#titlebar</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token property">display</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> none</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">/* サイドバーの微調整 */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token selector id" style="color:rgb(255, 121, 198)">#tabbrowser-tabs</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token property">visibility</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> collapse </span><span class="token important">!important</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token selector id" style="color:rgb(255, 121, 198)">#sidebar</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token property">min-width</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">65</span><span class="token unit">px</span><span class="token plain"> </span><span class="token important">!important</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="結果">結果<a class="hash-link" href="#結果" title="見出しへの直接リンク">​</a></h3><p>保存したら、Firefox を再起動して確認します。ブラウザ上部のタブが消えてるはずです。</p><p><img loading="lazy" src="https://i.gyazo.com/d70e01540348dd1b5ebe65835e42c519.png" alt="Firefox after" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="追記-2022-01-19">追記 2022-01-19<a class="hash-link" href="#追記-2022-01-19" title="見出しへの直接リンク">​</a></h2><p><code>userChrome.css</code> が効かない場合がある。
<code>about:config</code> を開いて、 <code>toolkit.legacyUserProfileCustomizations.stylesheets</code> を入力。
値を <code>true</code> に変更しておこう。</p>]]></content:encoded>
            <category>firefox</category>
        </item>
        <item>
            <title><![CDATA[サブブランドやMVNOの通信料金比較]]></title>
            <link>https://mt2m10.github.io/2021/10/24/_comparison-of-smartphone-communication-charges</link>
            <guid>/2021/10/24/_comparison-of-smartphone-communication-charges</guid>
            <pubDate>Sun, 24 Oct 2021 12:32:00 GMT</pubDate>
            <description><![CDATA[プライベートでサブブランドや MVNO の通信料金を調べる機会があったのでまとめました。]]></description>
            <content:encoded><![CDATA[<p>プライベートでサブブランドや MVNO の通信料金を調べる機会があったのでまとめました。</p><p>2021 年 10 月末時点での通信料金比較です。
5 社をピックアップして比較しました。</p><ul><li><a href="https://ahamo.com/index.html" target="_blank" rel="noopener noreferrer">ahamo</a></li><li><a href="https://www.uqwimax.jp/mobile/" target="_blank" rel="noopener noreferrer">UQ mobile</a></li><li><a href="https://www.ymobile.jp/" target="_blank" rel="noopener noreferrer">ワイモバイル</a></li><li><a href="https://www.ntt.com/personal/services/mobile/one.html" target="_blank" rel="noopener noreferrer">OCN モバイル ONE</a></li><li><a href="https://join.biglobe.ne.jp/mobile/?cl=head_logo_mobile" target="_blank" rel="noopener noreferrer">BIGLOBE モバイル</a></li></ul><p>今回の比較は月々にかかる料金と通信の品質をメインに調べています。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="基本料金">基本料金<a class="hash-link" href="#基本料金" title="見出しへの直接リンク">​</a></h3><p>音声通話 + データ通信の料金の一覧です。（税抜）</p><table><thead><tr><th>基本データ容量</th><th>ahamo</th><th>UQ mobile</th><th>ワイモバイル</th><th>OCN モバイル ONE</th><th>BIGLOBE モバイル</th></tr></thead><tbody><tr><td>1GB</td><td>-</td><td>-</td><td>-</td><td>700 円</td><td>980 円</td></tr><tr><td>3GB</td><td>-</td><td>1480 円</td><td>1980 円</td><td>900 円</td><td>1200 円</td></tr><tr><td>6GB</td><td>-</td><td>-</td><td>-</td><td>1200 円</td><td>1700 円</td></tr><tr><td>10GB</td><td>-</td><td>-</td><td>-</td><td>1600 円</td><td>-</td></tr><tr><td>10GB</td><td>-</td><td>-</td><td>-</td><td>-</td><td>3400 円</td></tr><tr><td>15GB</td><td>-</td><td>2480 円</td><td>2980 円</td><td>-</td><td>-</td></tr><tr><td>20GB</td><td>2700 円</td><td>-</td><td>-</td><td>-</td><td>5200 円</td></tr><tr><td>25GB</td><td>-</td><td>3480 円</td><td>3780 円</td><td>-</td><td>-</td></tr><tr><td>30GB</td><td>-</td><td>-</td><td>-</td><td>-</td><td>7450 円</td></tr></tbody></table><h3 class="anchor anchorWithStickyNavbar_LWe7" id="その他比較">その他比較<a class="hash-link" href="#その他比較" title="見出しへの直接リンク">​</a></h3><table><thead><tr><th>項目</th><th>ahamo</th><th>UQ mobile</th><th>ワイモバイル</th><th>OCN モバイル ONE</th><th>BIGLOBE モバイル</th></tr></thead><tbody><tr><td>回線</td><td>ドコモ</td><td>au</td><td>ソフトバンク</td><td>ドコモ</td><td>ドコモ / au (選択可能)</td></tr><tr><td>5G</td><td>○</td><td>○</td><td>○</td><td>×</td><td>×</td></tr><tr><td>通話料金</td><td>22 円/30 秒</td><td>22 円/30 秒</td><td>22 円/30 秒</td><td>10 円/30 秒 <sup id="fnref-1-9c77e8"><a href="#fn-1-9c77e8" class="footnote-ref">1</a></sup></td><td>10 円/30 秒 <sup id="fnref-1-9c77e8"><a href="#fn-1-9c77e8" class="footnote-ref">1</a></sup></td></tr><tr><td>無料通話分</td><td>1 回につき 5 分間まで無料</td><td>なし</td><td>なし</td><td>なし</td><td>なし</td></tr><tr><td>家族割</td><td>なし</td><td>あり <sup id="fnref-2-9c77e8"><a href="#fn-2-9c77e8" class="footnote-ref">2</a></sup></td><td>あり</td><td>あり <sup id="fnref-3-9c77e8"><a href="#fn-3-9c77e8" class="footnote-ref">3</a></sup></td><td>あり</td></tr><tr><td>割引料金</td><td>-</td><td>全回線が対象 <br> 3GB: 900 円/月 <br> 15GB: 1900 円/月 <br> 25GB: 2700 円/月</td><td>2 回線目以降が対象 <br> 3GB: 900 円/月 <br> 15GB: 1900 円/月 <br> 25GB: 2700 円/月</td><td>2 回線目以降が対象 <br> 200 円割引</td><td>2 回線目以降が対象 <br> 200 円割引</td></tr></tbody></table><h3 class="anchor anchorWithStickyNavbar_LWe7" id="通信速度の比較">通信速度の比較<a class="hash-link" href="#通信速度の比較" title="見出しへの直接リンク">​</a></h3><p>ahamo ≧ ワイモバイル ≧ UQ mobile &gt; OCN モバイル ONE &gt; BIGLOBE モバイル</p><p>ahamo、ワイモバイル、UQ mobile の通信品質は安定しているので、いつでも速くて快適に使えます。
OCN モバイル ONE、BIGLOBE モバイルは、平日の昼辺りで通信速度が低下しますが、インターネットを普通に利用できる程度の通信速度は出るので、あまり気にするほどでもなさそうです。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="まとめ">まとめ<a class="hash-link" href="#まとめ" title="見出しへの直接リンク">​</a></h3><ul><li>データ通信の安定を選ぶなら、ahamo・UQ mobile・ワイモバイル</li><li>電話を書けることが多いなら、ahamo</li><li>安さを求めるなら、OCN モバイル ONE</li></ul><div class="footnotes"><hr><ol><li id="fn-3-9c77e8">OCN 光モバイル割 に加入した場合に適用されます。詳細は<a href="https://www.ntt.com/personal/services/mobile/one/common/hikari-mobile.html" target="_blank" rel="noopener noreferrer">こちら</a>から。<a href="#fnref-3-9c77e8" class="footnote-backref">↩</a></li><li id="fn-2-9c77e8"><code>でんきコース</code> または <code>インターネットコース</code> のどちらかに加入した場合に適用されます。詳細は<a href="https://www.uqwimax.jp/mobile/newplan/?tbp_ptn=SetMobileDefault&amp;tbp_num=1&amp;tbp_idx=1" target="_blank" rel="noopener noreferrer">こちら</a>から。<a href="#fnref-2-9c77e8" class="footnote-backref">↩</a></li><li id="fn-1-9c77e8">専用アプリから電話をかけると 10 円/30 秒で通話可能です。専用以外のアプリからの通話料金は 22 円/30 秒になります。<a href="#fnref-1-9c77e8" class="footnote-backref">↩</a></li></ol></div>]]></content:encoded>
            <category>スマートフォン</category>
            <category>通信料金</category>
        </item>
        <item>
            <title><![CDATA[Amazon API Gatewayでバイナリデータを返す]]></title>
            <link>https://mt2m10.github.io/2021/10/19/_retrun-binary-data-in-aws-api-gateway</link>
            <guid>/2021/10/19/_retrun-binary-data-in-aws-api-gateway</guid>
            <pubDate>Tue, 19 Oct 2021 11:54:00 GMT</pubDate>
            <description><![CDATA[API Gateway を使ってバイナリデータを返却する場合、設定が必要だったのでメモしとく。]]></description>
            <content:encoded><![CDATA[<p>API Gateway を使ってバイナリデータを返却する場合、設定が必要だったのでメモしとく。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="困ってること">困ってること<a class="hash-link" href="#困ってること" title="見出しへの直接リンク">​</a></h3><p>画像が表示されない。</p><p>細かいこと書くのがめんどうなので図にしました。</p><p><img loading="lazy" src="https://i.gyazo.com/7b088e7b34c6a0634e27394e132bd8f6.png" alt="occurrence.png" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="やったこと">やったこと<a class="hash-link" href="#やったこと" title="見出しへの直接リンク">​</a></h3><p>API Gatewayの設定でバイナリメディアタイプに <code>text/html</code> を設定</p><p><a href="https://aws.amazon.com/jp/premiumsupport/knowledge-center/api-gateway-binary-data-lambda/" target="_blank" rel="noopener noreferrer">Lambdaプロキシ統合を使用して、バイナリデータを処理するAPI Gateway APIを設定するにはどうすればよいですか？</a> によると、ブラウザから送信してるAcceptヘッダーのデフォルトが <code>text/html</code> らしいので、バイナリメディアタイプとして追加する必要があるらしい。</p><blockquote><p>注: ウェブブラウザは複数の値を含む Accept ヘッダーを自動的に送信します。デフォルトでは、最初の値は常に html/text です。API Gateway は最初の値のみを参照するので、text/html をバイナリメディアタイプとして API に追加する必要があります。そうでないと、次のエラーメッセージが表示されます</p></blockquote>]]></content:encoded>
            <category>aws</category>
            <category>apigateway</category>
        </item>
        <item>
            <title><![CDATA[Linuxでユニットファイルを作って自動起動させる]]></title>
            <link>https://mt2m10.github.io/2021/10/14/_linux-unit</link>
            <guid>/2021/10/14/_linux-unit</guid>
            <pubDate>Thu, 14 Oct 2021 13:05:00 GMT</pubDate>
            <description><![CDATA[PHPのビルトインサーバとNode.js Express アプリケーション用のビルトインサーバのユニットファイルを作成して自動起動できるようにしました。]]></description>
            <content:encoded><![CDATA[<p>PHPのビルトインサーバとNode.js Express アプリケーション用のビルトインサーバのユニットファイルを作成して自動起動できるようにしました。
凝ったことをしないのであれば、<code>service</code> ファイルを作成するだけでOKなので簡単です。</p><p>実行させるコマンドは以下です。</p><ul><li>PHP<ul><li><code>php -S 0.0.0.0:8000 public/index.php -t public</code></li></ul></li><li>Node.js<ul><li><code>node ./bin/www</code></li></ul></li></ul><p><code>service</code> ファイルに書くときは、 <code>php</code> コマンドや <code>node</code> コマンドをフルパスで書くと確実に動くので、パスを確認しておきます。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ which php</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">/usr/bin/php</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ which node</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">~/.nvm/versions/node/v16.11.1/bin/node</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>確認したら、<code>service</code> ファイルを作ります。ファイル名はなんでもOKです。ここでは<code>php.service</code>、<code>nodejs.service</code>とします。</p><ul><li><p>/etc/systemd/system/php.service</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">[Unit]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Description = serve php</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">[Service]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">ExecStart = /usr/bin/php -S 0.0.0.0:8000 public/index.php -t public</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Restart = always</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Type = simple</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">WorkingDirectory = /home/ec2-user/php-app</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">User = ec2-user</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Group = ec2-user</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">[Install]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">WantedBy = multi-user.target</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p>/etc/systemd/system/nodejs.service</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">[Unit]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Description = serve nodejs</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">[Service]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">ExecStart = /home/ec2-user/.nvm/versions/node/v16.11.1/bin/node ./bin/www</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Restart = always</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Type = simple</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">WorkingDirectory = /home/ec2-user/nodejs-app</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">User = ec2-user</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Group = ec2-user</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">[Install]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">WantedBy = multi-user.target</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li></ul><p><code>WorkingDirectory</code> にアプリケーションのルートディレクトリを指定して <code>ExecStart</code> にコマンドを指定します。他の項目については説明できないので各々で調べてください。</p><p>それでは、ビルトインサーバを起動しましょう</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ sudo systemctl start php</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ sudo systemctl start nodejs</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>開始したら状態を確認します。以下のようになっていればOKです。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ sudo systemctl status php</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">● php.service - serve php</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   Loaded: loaded (/etc/systemd/system/php.service; enabled; vendor preset: disabled)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   Active: active (running) since Thu 2021-10-14 01:30:20 UTC; 1h 8min ago</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> Main PID: 10612 (php)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   CGroup: /system.slice/php.service</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">           └─10612 /usr/bin/php -S 0.0.0.0:8000 public/index.php -t public</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ sudo systemctl status nodejs</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">● nodejs.service - serve nodejs</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   Loaded: loaded (/etc/systemd/system/nodejs.service; enabled; vendor preset: disabled)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   Active: active (running) since Thu 2021-10-14 02:16:43 UTC; 23min ago</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> Main PID: 8875 (node)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   CGroup: /system.slice/nodejs.service</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">           └─8875 /home/ec2-user/.nvm/versions/node/v16.11.1/bin/node ./bin/www</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>自動起動の設定をする場合は、以下コマンドを実行してください。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ sudo systemctl enable php</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ sudo systemctl enable nodejs</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>Linux</category>
            <category>ユニットファイル</category>
        </item>
        <item>
            <title><![CDATA[PeerCast民と麻雀]]></title>
            <link>https://mt2m10.github.io/2021/10/04/_mahjong</link>
            <guid>/2021/10/04/_mahjong</guid>
            <pubDate>Mon, 04 Oct 2021 00:56:00 GMT</pubDate>
            <description><![CDATA[新宿で麻雀オフ会してきました。]]></description>
            <content:encoded><![CDATA[<p>新宿で麻雀オフ会してきました。</p><p>メンツは以下。</p><ul><li><a href="https://twitter.com/Blood_chin" target="_blank" rel="noopener noreferrer">@Blood_chin</a></li><li><a href="https://twitter.com/tottokotototo" target="_blank" rel="noopener noreferrer">@tottokotototo</a></li><li>きーばし （Twitterアカウントが分からん）</li></ul><p><a href="https://twitter.com/Blood_chin" target="_blank" rel="noopener noreferrer">@Blood_chin</a>、<a href="https://twitter.com/tottokotototo" target="_blank" rel="noopener noreferrer">@tottokotototo</a> は既にオフしたことありますが、きーばしさんが初めてでした。</p><p>結果は10半荘打って、<code>2-2-2-4</code> の <code>-47</code> 。</p><p>もっと大負けしそうなところで親国士の16000オールを上がれたのでよかったー😮‍💨</p><p>あと、<a href="https://3-5.jp/id/shinjuku/" target="_blank" rel="noopener noreferrer">スリーファイブ</a>に行ったんですが、セット代が1卓555円/時間と超格安だったのでマジで助かりました。永遠にこの料金でお願いします。</p><p><img loading="lazy" src="https://i.gyazo.com/053ef973a6383c11279ac00061e9f8a0.png" class="img_ev3q"></p><p>息抜きをするいい機会となりました。</p><p>ありがとうございました。</p>]]></content:encoded>
            <category>麻雀</category>
        </item>
        <item>
            <title><![CDATA[CentOSにMeCabをインストールする]]></title>
            <link>https://mt2m10.github.io/2021/09/29/_mecab-install</link>
            <guid>/2021/09/29/_mecab-install</guid>
            <pubDate>Wed, 29 Sep 2021 13:00:00 GMT</pubDate>
            <description><![CDATA[白ヤギコーポレーションが公開しているモデルを使用する際に、pipで色々インストールするほかにサーバの方にMeCabをインストールしておく必要があります。インストールしないとエラーになったので多分そうだと思います。]]></description>
            <content:encoded><![CDATA[<p>白ヤギコーポレーションが公開しているモデルを使用する際に、pipで色々インストールするほかにサーバの方にMeCabをインストールしておく必要があります。インストールしないとエラーになったので多分そうだと思います。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="前提">前提<a class="hash-link" href="#前提" title="見出しへの直接リンク">​</a></h3><ul><li>CentOS7</li><li>python 3.6.13</li><li>pip 21.2.4</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="mecab-のインストール">MeCab のインストール<a class="hash-link" href="#mecab-のインストール" title="見出しへの直接リンク">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">sudo yum install -y https://packages.groonga.org/centos/groonga-release-latest.noarch.rpm</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">sudo yum makecache</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">sudo yum install -y mecab mecab-ipadic mecab-devel</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="gensimのインストール">gensimのインストール<a class="hash-link" href="#gensimのインストール" title="見出しへの直接リンク">​</a></h3><p>gensimが4.0以降のやつを使うと、よくエラーになるので、3.8.3をインストールにします。
※エラーになる理由はわかってません。やる気が出たときにデバッグします。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">pip install gensim=3.8.3</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="モデルの取得">モデルの取得<a class="hash-link" href="#モデルの取得" title="見出しへの直接リンク">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">wget http://public.shiroyagi.s3.amazonaws.com/latest-ja-word2vec-gensim-model.zip</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">unzip latest-ja-word2vec-gensim-model.zip</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="確認">確認<a class="hash-link" href="#確認" title="見出しへの直接リンク">​</a></h3><p><code>word2vec.gensim.model</code> と同じ階層に以下コードを書いたpythonファイルを置く。</p><div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> gensim</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">models</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">word2vec </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> Word2Vec</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">model_path </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'/path/to/word2vec.gensim.model'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">model </span><span class="token operator">=</span><span class="token plain"> Word2Vec</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">load</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">model_path</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="参考">参考<a class="hash-link" href="#参考" title="見出しへの直接リンク">​</a></h3><ul><li><a href="https://aial.shiroyagi.co.jp/2017/02/japanese-word2vec-model-builder/" target="_blank" rel="noopener noreferrer">word2vecの学習済み日本語モデルを公開します</a></li><li><a href="https://qiita.com/tamaki_tech/items/6b01ed10f5da71b00877" target="_blank" rel="noopener noreferrer">CentOS7でMecabをyum installする時に「Check that the correct key URLs are configured for this repository.」と怒られて失敗する</a></li><li><a href="https://usecase.hatenablog.com/entry/2015/09/18/162018" target="_blank" rel="noopener noreferrer">CentOSにyumでMeCabをインストールする方法</a></li></ul>]]></content:encoded>
            <category>Python</category>
            <category>CentOS</category>
            <category>MeCab</category>
        </item>
        <item>
            <title><![CDATA[Amazon IVS でライブストリーミング配信]]></title>
            <link>https://mt2m10.github.io/2021/09/24/_aws-ivs</link>
            <guid>/2021/09/24/_aws-ivs</guid>
            <pubDate>Fri, 24 Sep 2021 02:48:00 GMT</pubDate>
            <description><![CDATA[Amazon Interactive Video Service (Amazon IVS)  を利用するとあっという間にOBSからライブストリーミング配信ができます。]]></description>
            <content:encoded><![CDATA[<p><code>Amazon Interactive Video Service (Amazon IVS) </code> を利用するとあっという間にOBSからライブストリーミング配信ができます。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="ivs-チャネルの作成">IVS チャネルの作成<a class="hash-link" href="#ivs-チャネルの作成" title="見出しへの直接リンク">​</a></h3><ol><li><a href="https://us-west-2.console.aws.amazon.com/ivs/home" target="_blank" rel="noopener noreferrer">https://us-west-2.console.aws.amazon.com/ivs/home</a> に移動して<code>チャネルの作成</code>をします。</li><li>チャネル名を入力して、<code>チャネルの作成</code>ボタンを押して作成します。
<img loading="lazy" src="https://i.gyazo.com/f95b07acb0fca3385f03fb1c764ce765.png" class="img_ev3q">
基本はデフォルトのままで良いと思いますが、配信動画を保存したい場合は、<code>ストリームの記録と保存</code>で<code>S3 への自動記録</code>を選択しましょう。</li><li><code>ストリーム設定</code>と<code>再生設定</code>を確認しておきましょう。
<img loading="lazy" src="https://i.gyazo.com/7ae4b00303e963858145ecc2302acc1d.png" class="img_ev3q"></li></ol><h3 class="anchor anchorWithStickyNavbar_LWe7" id="ライブストリーミングの開始">ライブストリーミングの開始<a class="hash-link" href="#ライブストリーミングの開始" title="見出しへの直接リンク">​</a></h3><p>今回はOBSを使ってライブストリーミングをします。</p><p>OBSの設定画面から設定していきます。</p><ol><li>配信設定</li></ol><ul><li>サービス: カスタム</li><li>サーバ: ストリーム設定の取り込みサーバー</li><li>ストリームキー: ストリーム設定のストリームキー
<img loading="lazy" src="https://i.gyazo.com/c5528c07f0352df80714177bbf076a39.png" class="img_ev3q"></li></ul><ol><li>映像設定</li></ol><ul><li>基本解像度: 1280x720</li><li>出力解像度: 852x480</li><li>縮小フィルタ: バイキュービック (先鋭化スケーリング、16のサンプル)</li><li>FPS共通知: 30
<img loading="lazy" src="https://i.gyazo.com/94895598f6f7b0abd5bed2406e8532c4.png" class="img_ev3q"></li></ul><ol><li>出力設定</li></ol><ul><li>エンコーダ: x264</li><li>レート制御: CBR</li><li>ビットレート: 2000（または、それ以下）</li><li>キーフレーム間隔: 2</li><li>CPU使用のプリセット: veryfast</li><li>チューン: ゼロレイテンシー
<img loading="lazy" src="https://i.gyazo.com/9cee6ac1e9e5fe400491f1468920cb3c.png" class="img_ev3q"></li></ul><p>設定値は適宜好きなように変更してもOKです。本設定は<a href="https://ivs-streaming.workshop.aws/jp/startstreaming.html" target="_blank" rel="noopener noreferrer">ライブストリーミングの開始</a>の内容をそのまま流用しています。</p><p>入力できたら、<code>OK</code>ボタン押します。</p><p>OBSのメイン・ウィンドウの左下にある「ソース」セクションで配信したいやつを選択しましょう。
<code>配信開始</code>をクリックすると、ライブ配信が開始されます。
<img loading="lazy" src="https://i.gyazo.com/eea1c3fb8f2d1b39cbadbb051f5f77e0.png" class="img_ev3q"></p><p>配信内容は<code>再生設定</code>の<code>再生URL</code>から視聴することができます。
VLCなどを使って見てみましょう。</p><p><img loading="lazy" src="https://i.gyazo.com/5c401d8c12001471569acfed358d6729.png" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="参考">参考<a class="hash-link" href="#参考" title="見出しへの直接リンク">​</a></h3><ul><li><a href="https://ivs-streaming.workshop.aws/jp/getting-started.html" target="_blank" rel="noopener noreferrer">はじめに :: Amazon Interactive Video Service Workshop</a></li></ul>]]></content:encoded>
            <category>aws</category>
            <category>streaming</category>
        </item>
        <item>
            <title><![CDATA[Dark Mode Switch でダークモード対応]]></title>
            <link>https://mt2m10.github.io/2021/09/19/_darkmode</link>
            <guid>/2021/09/19/_darkmode</guid>
            <pubDate>Sat, 18 Sep 2021 20:42:00 GMT</pubDate>
            <description><![CDATA[Dark Mode Switch というJavaScriptのライブラリを使って本サイトのダークモード対応をしました。]]></description>
            <content:encoded><![CDATA[<p><a href="https://github.com/coliff/dark-mode-switch" target="_blank" rel="noopener noreferrer">Dark Mode Switch</a> というJavaScriptのライブラリを使って本サイトのダークモード対応をしました。
<code>README.md</code> に書いてある通りに実装するだけで簡単にできます。</p><p><code>README.md</code> の内容丸パクリですが、実装の仕方を残しておきます。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="必須条件">必須条件<a class="hash-link" href="#必須条件" title="見出しへの直接リンク">​</a></h3><ul><li>Bootstrap 4.x or 5.x</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="使い方">使い方<a class="hash-link" href="#使い方" title="見出しへの直接リンク">​</a></h3><ol><li>ダークモードトグル用のカスタムスイッチを追加し、続いて <code>dark-mode-switch.min.js</code> スクリプトを追加します。
Bootstrap 4.x<div class="language-html codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-html codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">div</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">class</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">custom-control custom-switch</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">input</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">type</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">checkbox</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">class</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">custom-control-input</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">id</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">darkSwitch</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">label</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">class</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">custom-control-label</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">for</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">darkSwitch</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain">Dark Mode</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag" style="color:rgb(255, 121, 198)">label</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag" style="color:rgb(255, 121, 198)">div</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">script</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">src</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">dark-mode-switch.min.js</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token script"></span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag" style="color:rgb(255, 121, 198)">script</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>Bootstrap 5.x<div class="language-html codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-html codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">div</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">class</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">form-check form-switch</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">input</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">type</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">checkbox</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">class</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">form-check-input</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">id</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">darkSwitch</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">label</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">class</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">custom-control-label</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">for</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">darkSwitch</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain">Dark Mode</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag" style="color:rgb(255, 121, 198)">label</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag" style="color:rgb(255, 121, 198)">div</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">script</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">src</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">dark-mode-switch.min.js</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">"</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token script"></span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag" style="color:rgb(255, 121, 198)">script</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><code>dark-mode.css</code> をサイトに合わせて編集します。</li></ol><h3 class="anchor anchorWithStickyNavbar_LWe7" id="dark-modecss-の編集"><code>dark-mode.css</code> の編集<a class="hash-link" href="#dark-modecss-の編集" title="見出しへの直接リンク">​</a></h3><p>ダークモードをオンにすると、bodyタグに <code>data-theme="dark"</code> が追加されます。CSSを使ってページ内の要素を対象にすると、次のようになります。</p><div class="language-css codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-css codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token selector attribute punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token selector attribute attr-name" style="color:rgb(241, 250, 140)">data-theme</span><span class="token selector attribute operator" style="color:rgb(255, 121, 198)">=</span><span class="token selector attribute attr-value" style="color:rgb(255, 121, 198)">"dark"</span><span class="token selector attribute punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token property">background-color</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token hexcode color">#111</span><span class="token plain"> </span><span class="token important">!important</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token property">color</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token hexcode color">#eee</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>library</category>
            <category>css</category>
        </item>
        <item>
            <title><![CDATA[Amazon Linux 2 + Apache + Codeigniter4 でのWebサーバ構築]]></title>
            <link>https://mt2m10.github.io/2021/09/15/_build-webserver</link>
            <guid>/2021/09/15/_build-webserver</guid>
            <pubDate>Wed, 15 Sep 2021 01:00:00 GMT</pubDate>
            <description><![CDATA[Amazon Linux 2 インスタンスに Apache HTTP Server と PHP8 をインストールしてWebサーバを構築します。]]></description>
            <content:encoded><![CDATA[<p>Amazon Linux 2 インスタンスに Apache HTTP Server と PHP8 をインストールしてWebサーバを構築します。
Codeigniter4のソースコードを利用したかったので、それ用に少しアレンジしています。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="環境">環境<a class="hash-link" href="#環境" title="見出しへの直接リンク">​</a></h3><ul><li>Amazon Linux 2 (EC2)</li><li>PHP 8.0.8</li><li>Apache HTTP Server 2.4</li><li>Codeigniter 4</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="手順">手順<a class="hash-link" href="#手順" title="見出しへの直接リンク">​</a></h3><ol><li><p>PHP 8 とApache HTTP Server をインストール</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ sudo amazon-linux-extras enable php8.0</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ sudo yum install -y httpd php php-devel php-mysqlnd php-mbstring php-gd php-xml php-opcache php-pecl-zip php-pear php-intl mod_ssl</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p>Apache HTTP Server を有効化 + 起動</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ sudo systemctl enable httpd</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ sudo systemctl start httpd</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p>ファイルの許可設定
ec2-user を apache グループに追加し、apache ディレクトリの所有権を /var/www グループに付与し、グループへの書き込み権限を割り当てます。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ sudo usermod -a -G apache ec2-user</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ exit</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>再ログインして、グループが適用されているか確認する。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ groups</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>/var/www</code> 配下のグループと所有権を変更する。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ sudo chown -R ec2-user:apache /var/www</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ sudo chmod 2775 /var/www &amp;&amp; find /var/www -type d -exec $ sudo chmod 2775 {} \;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ find /var/www -type f -exec sudo chmod 0664 {} \;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p>(オプション) Composer のインストール
個人的に Composer を使いたかったのでインストールしています。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ sudo su -</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># php -r "if (hash_file('sha384', 'composer-setup.php') === '756890a4488ce9024fc62c56153228907f1545c228516cbf63f885e036d37e9a59d27d63f46af1d4d07ee0f76181c7d3') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># php composer-setup.php</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># php -r "unlink('composer-setup.php');"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># mv composer.phar /usr/local/bin/composer</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># chmod 777 /usr/local/bin/composer</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p>SSL/TLS の設定
自己署名のデジタル証明書を使用して、Amazon Linux 2 で TLS をセットアップしてきます。</p><p>サーバーホスト用の自己署名 X.509 証明書とプライベートキーを生成するためのスクリプトを利用してセットアップします。
作成された <code>localhost.crt</code> には証明書とキーの両方が含まれています。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain"># cd /etc/pki/tls/certs</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># ./make-dummy-cert localhost.crt</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>/etc/httpd/conf.d/ssl.conf </code> を編集します。</p><ul><li><code>DocumentRoot "/var/www/html/public"</code> を追加</li><li><code>SSLCertificateKeyFile /etc/pki/tls/private/localhost.key</code> をコメントアウト</li></ul><p><code>/etc/httpd/conf.d/vhost.conf</code> を新規追加します（<code>vhost.conf</code> というファイル名でなくてもOK）。</p><div class="language-conf codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-conf codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">&lt;Directory "/var/www/html"&gt;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    AllowOverride All</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">&lt;/Directory&gt;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">&lt;VirtualHost *:80&gt;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    DocumentRoot "/var/www/html/public"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">&lt;/VirtualHost&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>完了したら <code>Apache HTTP Server</code> を再起動します。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain"># systemctl restart httpd</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># exit</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p>Codeigniter プロジェクトを作成</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ cd /var/www/</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ composer create-project codeigniter4/appstarter html</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li></ol><h3 class="anchor anchorWithStickyNavbar_LWe7" id="参考">参考<a class="hash-link" href="#参考" title="見出しへの直接リンク">​</a></h3><ul><li><a href="https://docs.aws.amazon.com/ja_jp/AWSEC2/latest/UserGuide/ec2-lamp-amazon-linux-2.html" target="_blank" rel="noopener noreferrer">チュートリアル: Amazon Linux 2 に LAMP ウェブサーバーをインストールする</a></li><li><a href="https://docs.aws.amazon.com/ja_jp/AWSEC2/latest/UserGuide/SSL-on-amazon-linux-2.html" target="_blank" rel="noopener noreferrer">チュートリアル: Amazon Linux 2 に SSL/TLS を設定する</a></li><li><a href="https://e-kamo.net/amazon-linux-extras-php8-available" target="_blank" rel="noopener noreferrer">Amazon Linux 2 の Extras Library に PHP8.0 登場</a></li></ul>]]></content:encoded>
            <category>aws</category>
            <category>apache</category>
            <category>codeigniter4</category>
        </item>
        <item>
            <title><![CDATA[anyenvからnodenvをインストールする]]></title>
            <link>https://mt2m10.github.io/2021/04/26/_node-install</link>
            <guid>/2021/04/26/_node-install</guid>
            <pubDate>Sun, 25 Apr 2021 15:00:00 GMT</pubDate>
            <description><![CDATA[anyenv を使ってバージョン管理ツールを導入する。]]></description>
            <content:encoded><![CDATA[<p>anyenv を使ってバージョン管理ツールを導入する。
brew コマンドを使って様々なバージョン管理ツールをインストールできるが、anyenv で入れておいたほうが後々楽だと思うので。
React を入門するために nodenv をインストールしてみる。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="環境">環境<a class="hash-link" href="#環境" title="見出しへの直接リンク">​</a></h3><ul><li>macOS Big Sur 11.23</li><li>Mac mini (M1, 2020)</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="手順">手順<a class="hash-link" href="#手順" title="見出しへの直接リンク">​</a></h3><div class="language-zsh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-zsh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain"># anyenv をインストール</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">% brew install anyenv</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">% echo 'eval "$(anyenv init -)"' &gt;&gt; ~/.zshrc</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># 先に {exec $SHELL -l} を実行したらエラーになったので事前に初期化する</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">% anyenv install --init</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">% exec $SHELL -l</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># nodenv をインストール</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">% anyenv install nodenv</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># yarn が必要な場合は plugins ディレクトリにこのリポジトリを clone する</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">% mkdir -p "$(nodenv root)/plugins"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">% git clone https://github.com/pine/nodenv-yarn-install.git "$(nodenv root)/ plugins/nodenv-yarn-install"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># インストール （今回は v16.0.0 をインストール）</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># インストールできるバージョンを確認</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">% nodenv install -l</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">% nodenv install 16.0.0</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">% nodenv global 16.0.0</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>brew</category>
            <category>node</category>
            <category>npm</category>
            <category>yarn</category>
        </item>
        <item>
            <title><![CDATA[Codeigniter 4 メモ]]></title>
            <link>https://mt2m10.github.io/2020/11/19/_1</link>
            <guid>/2020/11/19/_1</guid>
            <pubDate>Thu, 19 Nov 2020 14:10:39 GMT</pubDate>
            <description><![CDATA[CLI]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="cli">CLI<a class="hash-link" href="#cli" title="見出しへの直接リンク">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="マイグレーションファイル作成">マイグレーションファイル作成<a class="hash-link" href="#マイグレーションファイル作成" title="見出しへの直接リンク">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain"># php spark migrate:create {table name}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="シードファイル作成">シードファイル作成<a class="hash-link" href="#シードファイル作成" title="見出しへの直接リンク">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain"># php spark make:seeder {table name}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="シード投入">シード投入<a class="hash-link" href="#シード投入" title="見出しへの直接リンク">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain"># php spark db:seed {seed file name}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="書き方">書き方<a class="hash-link" href="#書き方" title="見出しへの直接リンク">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="マイグレーションファイル">マイグレーションファイル<a class="hash-link" href="#マイグレーションファイル" title="見出しへの直接リンク">​</a></h3><div class="language-php codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-php codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">&lt;?php</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">namespace App\Database\Migrations;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">use CodeIgniter\Database\Migration;</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">class Cars extends Migration</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">{</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    public function up()</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        $this-&gt;forge-&gt;addField([</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            'id'     =&gt; [</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    'type'           =&gt; 'CHAR',</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    'constraint'     =&gt; 32,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            ],</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            'type'   =&gt; [</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    'type'           =&gt; 'TEXT',</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            ],</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            'price'  =&gt; [</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    'type'           =&gt; 'INT',</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    'constraint'     =&gt; 32,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            ],</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            'color'  =&gt; [</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    'type'           =&gt; 'TEXT',</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            ],</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            'remark' =&gt; [</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    'type'           =&gt; 'TEXT',</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    'null'           =&gt; true,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            ],</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            'status' =&gt; [</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    'type'           =&gt; 'ENUM',</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    'constraint'     =&gt; ['onsale', 'sold'],</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    'default'        =&gt; 'onsale',</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            ],</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            // 配列だとdatetime型でdefault設定ができないので以下書き方となる</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            'created_at datetime default current_timestamp',</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            'updated_at datetime default current_timestamp on update current_timestamp',</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        ]);</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        $this-&gt;forge-&gt;addKey('id', true); // PL</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        $this-&gt;forge-&gt;createTable('cars');  // created</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    //--------------------------------------------------------------------</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    public function down()</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        $this-&gt;forge-&gt;dropTable('cars');</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[【PHP】前月・翌月の末日を求めるときは慎重に]]></title>
            <link>https://mt2m10.github.io/2019/11/25/_1</link>
            <guid>/2019/11/25/_1</guid>
            <pubDate>Mon, 25 Nov 2019 10:48:53 GMT</pubDate>
            <description><![CDATA[前月・翌月を求めるとき起算日や計算方法によっては、正確に求められないことがあります。]]></description>
            <content:encoded><![CDATA[<p>前月・翌月を求めるとき起算日や計算方法によっては、正確に求められないことがあります。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="確認環境">確認環境<a class="hash-link" href="#確認環境" title="見出しへの直接リンク">​</a></h2><ul><li>PHP 7.3</li></ul><div class="language-php codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-php codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">&lt;?php</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">// 10月31日の前月の末日を取得したい</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">echo date('Y-m-d', strtotime('2019-10-31 -1 month'));</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">// 想定：2019-09-30</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">// 実際：2019-10-01</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">// 10月31日の翌月の末日を取得したい</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">echo date('Y-m-d', strtotime('2019-10-31 +1 month'));</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">// 想定：2019-11-30</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">// 実際：2019-12-01</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">// 🤔🤔🤔</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>多分こんなからくり。</p><ul><li>2019-10-31の一月前 =&gt; 2019-09-31 =&gt; 9月に31日はないので繰り上げて2019-10-01。</li><li>2019-10-31の一月後 =&gt; 2019-11-31 =&gt; 11月に31日はないので繰り上げて2019-12-01。</li></ul><p>正確に求めたい場合は以下の指定をしましょう。</p><div class="language-php codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-php codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">&lt;?php</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">//=====================</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">// 前月</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">//=====================</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">// 一番スマート</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">echo date('Y-m-d', strtotime('2019-10-31 last day of previous month'));</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">// 2019-09-30</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">// 当月の初日を取得したあとに、1日マイナスする</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$firstDayOfThisMonth = date('Y-m-d', strtotime('2019-10-31 first day of this month'));</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">echo date('Y-m-d', strtotime($firstDayOfThisMonth . '-1 day'));</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">// 2019-09-30</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">//=====================</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">// 翌月</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">//=====================</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">// スマート</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">echo date('Y-m-d', strtotime('2019-10-31 last day of next month'));</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">// 2019-11-30</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[【PHP】composerの使い方]]></title>
            <link>https://mt2m10.github.io/2019/11/20/_1</link>
            <guid>/2019/11/20/_1</guid>
            <pubDate>Wed, 20 Nov 2019 12:32:51 GMT</pubDate>
            <description><![CDATA[composerはPHPのライブラリ管理ツールです。以前から存在は知っていたけど、ちゃんと使ったことがありませんでした。]]></description>
            <content:encoded><![CDATA[<p>composerはPHPのライブラリ管理ツールです。以前から存在は知っていたけど、ちゃんと使ったことがありませんでした。</p><p>最近、素のPHPを書く機会があり、ライブラリを使わないとかなりキツイことがあったので、調べたことをメモしておきます。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="環境">環境<a class="hash-link" href="#環境" title="見出しへの直接リンク">​</a></h2><ul><li>vagrant</li><li>VirtualBox</li><li>CentOS7</li><li>PHP 5.6</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="composerのインストール">composerのインストール<a class="hash-link" href="#composerのインストール" title="見出しへの直接リンク">​</a></h2><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">### セットアップ用PHPスクリプトをダウンロード</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ php -r </span><span class="token string" style="color:rgb(255, 121, 198)">"copy('https://getcomposer.org/installer', 'composer-setup.php');"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">### セットアップ実行</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ php composer-setup.php</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">### スクリプトを削除</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ php -r </span><span class="token string" style="color:rgb(255, 121, 198)">"unlink('composer-setup.php');"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">### どこでも使えるように/usr/local/binに移動</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ </span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">mv</span><span class="token plain"> composer.phar /usr/local/bin/composer</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">### 動作確認</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ </span><span class="token function" style="color:rgb(80, 250, 123)">composer</span><span class="token plain"> -v</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   ______</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  / ____/___  ____ ___  ____  ____  ________  _____</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> / /   / __ </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain">/ __ `__ </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain">/ __ </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain">/ __ </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain">/ ___/ _ </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain">/ ___/</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">/ /___/ /_/ / / / / / / /_/ / /_/ </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">__  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">  __/ /</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain">____/</span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain">____/_/ /_/ /_/ .___/</span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain">____/____/</span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain">___/_/</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                    /_/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ライブラリのインストール">ライブラリのインストール<a class="hash-link" href="#ライブラリのインストール" title="見出しへの直接リンク">​</a></h2><p>試しに、<code>Guzzle</code>をインストールします。</p><blockquote><p>Guzzleとは、PHPのHTTPクライアントで、HTTPリクエストを簡単に実現することができるライブラリです。</p></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="その１">その１<a class="hash-link" href="#その１" title="見出しへの直接リンク">​</a></h3><p><code>require</code>コマンドでインストールする。</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ </span><span class="token function" style="color:rgb(80, 250, 123)">composer</span><span class="token plain"> require guzzlehttp/guzzle</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Using version ^6.4 </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> guzzlehttp/guzzle</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">./composer.json has been created</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Loading </span><span class="token function" style="color:rgb(80, 250, 123)">composer</span><span class="token plain"> repositories with package information</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Updating dependencies </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">including require-dev</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Package operations: </span><span class="token number">5</span><span class="token plain"> installs, </span><span class="token number">0</span><span class="token plain"> updates, </span><span class="token number">0</span><span class="token plain"> removals</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  - Installing ralouphie/getallheaders </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">3.0</span><span class="token plain">.3</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">: Loading from cache</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  - Installing psr/http-message </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">1.0</span><span class="token plain">.1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">: Loading from cache</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  - Installing guzzlehttp/psr7 </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">1.6</span><span class="token plain">.1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">: Loading from cache</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  - Installing guzzlehttp/promises </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">v1.3.1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">: Loading from cache</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  - Installing guzzlehttp/guzzle </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">6.4</span><span class="token plain">.1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">: Loading from cache</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">guzzlehttp/psr7 suggests installing zendframework/zend-httphandlerrunner </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">Emit PSR-7 responses</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">guzzlehttp/guzzle suggests installing psr/log </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">Required </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> using the Log middleware</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Writing lock </span><span class="token function" style="color:rgb(80, 250, 123)">file</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Generating autoload files</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="その2">その2<a class="hash-link" href="#その2" title="見出しへの直接リンク">​</a></h3><p><code>composer init</code>を利用してインストールする。</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">### initで対話形式で、composer.jsonを作成します</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">### この辺の細かいことは分からないので割愛</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ </span><span class="token function" style="color:rgb(80, 250, 123)">composer</span><span class="token plain"> init</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  Welcome to the Composer config generator</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">This </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">command</span><span class="token plain"> will guide you through creating your composer.json config.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Package name </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token operator">&lt;</span><span class="token plain">vendor</span><span class="token operator">&gt;</span><span class="token plain">/</span><span class="token operator">&lt;</span><span class="token plain">name</span><span class="token operator">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">masashi/hoge</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain">:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Description </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain">:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Author </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">masashi </span><span class="token operator">&lt;</span><span class="token plain">masashi626</span><span class="token operator file-descriptor important">9</span><span class="token operator">&gt;</span><span class="token plain">, n to skip</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain">: n</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Minimum Stability </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain">:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Package Type </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">e.g. library, project, metapackage, composer-plugin</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain">:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">License </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain">:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Define your dependencies.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Would you like to define your dependencies </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">require</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> interactively </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">yes</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain">? </span><span class="token function" style="color:rgb(80, 250, 123)">yes</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Search </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> a package: guzzlehttp/guzzle</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Enter the version constraint to require </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">or leave blank to use the latest version</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Using version ^6.4 </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> guzzlehttp/guzzle</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Search </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> a package:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Would you like to define your dev dependencies </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">require-dev</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> interactively </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">yes</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain">?</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Search </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> a package:</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">"name"</span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"masashi/hoge"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">"require"</span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token string" style="color:rgb(255, 121, 198)">"guzzlehttp/guzzle"</span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"^6.4"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Do you confirm generation </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">yes</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain">?</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>Search for a package:</code> のとこで<code>guzzlehttp/guzzle</code>を入力すると、<code>composer.json</code>の<code>require</code>に追加してくれます。</p><p>これで準備完了。最後に<code>composer install</code>を実行してインストールします。</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ </span><span class="token function" style="color:rgb(80, 250, 123)">composer</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Loading </span><span class="token function" style="color:rgb(80, 250, 123)">composer</span><span class="token plain"> repositories with package information</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Updating dependencies </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">including require-dev</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Package operations: </span><span class="token number">5</span><span class="token plain"> installs, </span><span class="token number">0</span><span class="token plain"> updates, </span><span class="token number">0</span><span class="token plain"> removals</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  - Installing ralouphie/getallheaders </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">3.0</span><span class="token plain">.3</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">: Loading from cache</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  - Installing psr/http-message </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">1.0</span><span class="token plain">.1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">: Loading from cache</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  - Installing guzzlehttp/psr7 </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">1.6</span><span class="token plain">.1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">: Loading from cache</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  - Installing guzzlehttp/promises </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">v1.3.1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">: Loading from cache</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  - Installing guzzlehttp/guzzle </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">6.4</span><span class="token plain">.1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">: Loading from cache</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">guzzlehttp/psr7 suggests installing zendframework/zend-httphandlerrunner </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">Emit PSR-7 responses</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">guzzlehttp/guzzle suggests installing psr/log </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">Required </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> using the Log middleware</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Writing lock </span><span class="token function" style="color:rgb(80, 250, 123)">file</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Generating autoload files</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ライブラリの利用">ライブラリの利用<a class="hash-link" href="#ライブラリの利用" title="見出しへの直接リンク">​</a></h2><p>オートローダーを読み込んだあとに、普通に使うだけ。</p><div class="language-php codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-php codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">&lt;?php // autoloadを読み込むと、ライブラリを個別にrequire,includeしなくても使えます</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">require dirname(__FILE__). '/vendor/autoload.php';</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$client = new \GuzzleHttp\Client();</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$response = $client-&gt;request('GET', 'https://api.github.com/repos/guzzle/guzzle');</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">echo $response-&gt;getStatusCode() . PHP_EOL; # 200</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">echo $response-&gt;getHeaderLine('content-type') . PHP_EOL; # 'application/json; charset=utf8'</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">echo print_r(json_decode($response-&gt;getBody()), true); # '{"id": 1420053, "name": "guzzle", ...}'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>これだけでだいぶ楽になりました！</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Bronze Oracle Database 12cSQL基礎に合格しました]]></title>
            <link>https://mt2m10.github.io/2019/11/10/_1</link>
            <guid>/2019/11/10/_1</guid>
            <pubDate>Sun, 10 Nov 2019 03:12:46 GMT</pubDate>
            <description><![CDATA[結論]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="結論">結論<a class="hash-link" href="#結論" title="見出しへの直接リンク">​</a></h2><p>問題を解きまくってなれるしかない。暗記だけで合格するのは難しい。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="利用した参考書サイト">利用した参考書・サイト<a class="hash-link" href="#利用した参考書サイト" title="見出しへの直接リンク">​</a></h2><ul><li><a href="https://www.amazon.co.jp/dp/4844336762" target="_blank" rel="noopener noreferrer">徹底攻略 ORACLE MASTER Bronze 12c SQL基礎問題集[1Z0-061]対応</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="学習法">学習法<a class="hash-link" href="#学習法" title="見出しへの直接リンク">​</a></h2><ol><li>参考書を2回解く</li></ol><p>仕事でSQLを書く機会をある程度経験しているので、あまり時間を書けず学習しました。けっこう考える問題が多いので、1問あたりにかける時間は多め。</p><p>full outer joinは意味分からん。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="結果">結果<a class="hash-link" href="#結果" title="見出しへの直接リンク">​</a></h2><p>正解率：78% 合格ライン：65%</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="感想">感想<a class="hash-link" href="#感想" title="見出しへの直接リンク">​</a></h2><p><code>12c SQL基礎(1Z0-061)</code>は難しいとの噂だったので、けっこうビクビクしながら受験しましたが、実務などで慣れている人であれば、この難しさは気にならないと思いました。絶対受かりたい人は<code>Bronze SQL基礎I(1Z0-017)</code>を受験しましょう。</p><p>絶対おさえたいポイントは</p><ul><li>SQL関数</li><li>結合</li><li>暗黙の型変換</li><li>fm修飾子</li><li>制約</li><li>SQL行制限</li></ul><p>です。この辺はよくでる印象があります。</p><p>また、1,2問初見の問題が出てびっくりしましたが、75問もあるので影響はありませんでした。もしかしたら、<code>ping-t</code>や別の参考書には載っていたかもですが、無視して良いレベルです。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[【PHP】空配列を`=== []`で判定する]]></title>
            <link>https://mt2m10.github.io/2019/11/07/_1</link>
            <guid>/2019/11/07/_1</guid>
            <pubDate>Thu, 07 Nov 2019 12:02:20 GMT</pubDate>
            <description><![CDATA[TwitterでPHPのempty関数を安易に使うのは良くない趣旨のツイートを見ました。普段からemptyを使っていて何の疑問も持たなかったので、へーって思ってツイートを眺めてました。]]></description>
            <content:encoded><![CDATA[<p>TwitterでPHPのempty関数を安易に使うのは良くない趣旨のツイートを見ました。普段からemptyを使っていて何の疑問も持たなかったので、へーって思ってツイートを眺めてました。</p><p>こんなチェックをするそうです。</p><div class="language-php codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-php codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">if ($a === [])</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>チェック内容が明確なので可読性がよいです。</p><div class="language-php codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-php codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">if (empty($a))</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>この場合、<code>$a</code>がarrayの空配列チェックなのか、stringの空文字チェックなのか1文だけでは分かりません。あと、NULLの場合の挙動が先述のコードとは異なるので、なんとなく危ないですね。</p><p>今度からもう少しこういうところに気をつかって書いていく良いきっかけとなりました。</p><p>※PHPマニュアルの<a href="https://www.php.net/manual/ja/types.comparisons.php" target="_blank" rel="noopener noreferrer">PHP 型の比較表</a>から確認できるように、emptyの挙動はけっこうトリッキー。気をつけましょう！</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Bronze Oracle Database DBA 12c合格しました]]></title>
            <link>https://mt2m10.github.io/2019/10/26/_1</link>
            <guid>/2019/10/26/_1</guid>
            <pubDate>Sat, 26 Oct 2019 08:18:53 GMT</pubDate>
            <description><![CDATA[LPIC Level1 Ver5.0に合格してから2ヶ月ほど立ちましたが、次はOracle社が行っている認定試験制度Bronze Oracle Database DBA 12cを受け合格しました。]]></description>
            <content:encoded><![CDATA[<p>LPIC Level1 Ver5.0に合格してから2ヶ月ほど立ちましたが、次はOracle社が行っている認定試験制度<code>Bronze Oracle Database DBA 12c</code>を受け合格しました。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="結論">結論<a class="hash-link" href="#結論" title="見出しへの直接リンク">​</a></h2><p><code>オラクルマスター教科書 Bronze Oracle Database DBA 12c</code>は割と有効。</p><p>これに出題されている問題が数個出題されました。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="利用した参考書サイト">利用した参考書・サイト<a class="hash-link" href="#利用した参考書サイト" title="見出しへの直接リンク">​</a></h2><ul><li><a href="https://www.amazon.co.jp/dp/B00UIWBD1A/" target="_blank" rel="noopener noreferrer">オラクルマスター教科書 Bronze Oracle Database DBA 12c</a></li><li><a href="https://ping-t.com/" target="_blank" rel="noopener noreferrer">Ping-t</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="学習法">学習法<a class="hash-link" href="#学習法" title="見出しへの直接リンク">​</a></h2><ol><li><p><code>Ping-t</code>を解く</p></li><li><p><code>オラクルマスター教科書 Bronze Oracle Database DBA 12c</code>の解説編を読む</p></li><li><p><code>オラクルマスター教科書 Bronze Oracle Database DBA 12c</code>の練習問題を解く</p></li><li><p>2-3を繰り返す</p></li></ol><p>Ping-tのプレミアムコンテンツに<code>Oracle Master 12c Bronze DBA</code>の問題集があるので、ちょこちょこ解きました。あまり進捗が良くないまま期限が来てしまい不完全燃焼でした。</p><p>あまり理解度が良くないと思ったので、オラクルマスター教科書の練習問題の前に解説編を読み、雰囲気を頭に入れました。</p><p>あとはひたすら練習問題です。練習問題でなかなか理解しにくい部分があれば解説編と合わせてしっかり読み込みます。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="結果">結果<a class="hash-link" href="#結果" title="見出しへの直接リンク">​</a></h2><p><strong>合格</strong></p><p>正解率：84%
合格ライン：70%</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="感想">感想<a class="hash-link" href="#感想" title="見出しへの直接リンク">​</a></h2><p>冒頭にも書きましたが、<code>オラクルマスター教科書 Bronze Oracle Database DBA 12c</code>に出題されている問題が数個出題されました。練習問題を覚えるのは合格するための有効な手段だと思います。</p><p>出題問題に関しては</p><ul><li>Oracle データベースの基本構造</li><li>インスタンスの起動／停止とメモリコンポーネントの管理</li><li>ユーザーおよびセキュリティの管理</li><li>データベースの監視とアドバイザの使用</li><li>バックアップおよびリカバリの実行</li></ul><p>あたりが多く出題されていた印象です。この辺を集中的にやるといいかも。</p><p>次はSQL基礎をちゃちゃっと片付けてOracle Master Bronzeを取りたいと思います。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[vagrant + gitbookで共有フォルダ内でbuildしたらno such file or directoryが出て困る]]></title>
            <link>https://mt2m10.github.io/2019/10/10/_1</link>
            <guid>/2019/10/10/_1</guid>
            <pubDate>Thu, 10 Oct 2019 06:51:43 GMT</pubDate>
            <description><![CDATA[最近、仕事でこそこそgitbookを使っています。vscodeでmarkdownを書きたいので共有フォルダを設定してホストOS側で編集したあと、ゲストOSでbuildしてます。]]></description>
            <content:encoded><![CDATA[<p>最近、仕事でこそこそgitbookを使っています。vscodeでmarkdownを書きたいので共有フォルダを設定してホストOS側で編集したあと、ゲストOSでbuildしてます。</p><p>環境構築時、buildするとエラー（no such file or directory）になってしまいました。ファイルあるのに。。。
でも、gitbookのライブラリっぽいファイルを修正することで解決できたので備忘として残します。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">[vagrant@localhost hoge]$ gitbook build</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">info: 8 plugins are installed</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">info: 5 explicitly listed</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">info: loading plugin "search-pro-kui"... OK</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">info: loading plugin "highlight"... OK</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">info: loading plugin "sharing"... OK</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">info: loading plugin "fontsettings"... OK</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">info: loading plugin "theme-default"... OK</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">info: found 5 pages</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">info: found 22 asset files</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Error: ENOENT: no such file or directory, stat '/vagrant/hoge/_book/gitbook/gitbook-plugin-fontsettings/fontsettings.js'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="環境">環境<a class="hash-link" href="#環境" title="見出しへの直接リンク">​</a></h2><ul><li>Windows10（ホストOS）</li><li>centos7（ゲストOS）</li><li>vagrant 2.2.5</li><li>VirtualBox 6.0.12</li><li>GitBook 3.2.3</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="vagrantfile">Vagrantfile<a class="hash-link" href="#vagrantfile" title="見出しへの直接リンク">​</a></h2><div class="language-ruby codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ruby codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">  # synced folder</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  config.vm.synced_folder ".", "/vagrant", type: "nfs"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="対応方法">対応方法<a class="hash-link" href="#対応方法" title="見出しへの直接リンク">​</a></h2><p><code>copyPluginAssets.js</code>内のメソッドの戻り値を変更する。</p><ol><li><code>copyPluginAssets.js</code>を探す<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ </span><span class="token function" style="color:rgb(80, 250, 123)">find</span><span class="token plain"> / -name </span><span class="token string" style="color:rgb(255, 121, 198)">"copyPluginAssets.js"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li>ファイルが見つかるはずなので、vi等で開く</li><li><code>copyAssets</code>メソッドを探す。（45行目あたり）</li><li>戻り値の<code>confirm</code>の値を<code>false</code>に変更。</li><li><code>copyResources</code>メソッドを探す。（78行目あたり）</li><li>戻り値の<code>confirm</code>の値を<code>false</code>に変更。</li><li>保存。</li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考サイト">参考サイト<a class="hash-link" href="#参考サイト" title="見出しへの直接リンク">​</a></h2><ul><li><a href="https://kuttsun.blogspot.com/2018/06/gitbook-no-such-file-or-directory.html" target="_blank" rel="noopener noreferrer">https://kuttsun.blogspot.com/2018/06/gitbook-no-such-file-or-directory.html</a></li></ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[SDKMANを使ってkotlinをインストール]]></title>
            <link>https://mt2m10.github.io/2019/09/28/_1</link>
            <guid>/2019/09/28/_1</guid>
            <pubDate>Fri, 27 Sep 2019 23:30:48 GMT</pubDate>
            <description><![CDATA[SDKMANはJVM言語のインストールができて、バージョンも指定できるツールです。]]></description>
            <content:encoded><![CDATA[<p>SDKMANはJVM言語のインストールができて、バージョンも指定できるツールです。</p><p><a href="https://sdkman.io/" target="_blank" rel="noopener noreferrer">https://sdkman.io/</a></p><p>SDKMANは以下をサポートしているそう。</p><ul><li>Mac OSX</li><li>Linux</li><li>Cygwin</li><li>Solaris</li><li>FreeBSD</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="sdkmanのインストール">SDKMANのインストール<a class="hash-link" href="#sdkmanのインストール" title="見出しへの直接リンク">​</a></h2><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ </span><span class="token function" style="color:rgb(80, 250, 123)">curl</span><span class="token plain"> -s </span><span class="token string" style="color:rgb(255, 121, 198)">"https://get.sdkman.io"</span><span class="token plain"> </span><span class="token operator">|</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">bash</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">source</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"</span><span class="token string environment constant" style="color:rgb(189, 147, 249)">$HOME</span><span class="token string" style="color:rgb(255, 121, 198)">/.sdkman/bin/sdkman-init.sh"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ sdk version</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">SDKMAN </span><span class="token number">5.7</span><span class="token plain">.3+337</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="kotlinのインストール">kotlinのインストール<a class="hash-link" href="#kotlinのインストール" title="見出しへの直接リンク">​</a></h2><p>9月末時点の最新バージョン（1.3.50）をインストールします。</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ sdk list kotlin</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Available Kotlin Versions</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token number">1.3</span><span class="token plain">.50              </span><span class="token number">1.2</span><span class="token plain">.50              </span><span class="token number">1.1</span><span class="token plain">.4               </span><span class="token number">1.0</span><span class="token plain">.1-2</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token number">1.3</span><span class="token plain">.41              </span><span class="token number">1.2</span><span class="token plain">.41              </span><span class="token number">1.1</span><span class="token plain">.3-2             </span><span class="token number">1.0</span><span class="token plain">.1-1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token number">1.3</span><span class="token plain">.40              </span><span class="token number">1.2</span><span class="token plain">.40              </span><span class="token number">1.1</span><span class="token plain">.3               </span><span class="token number">1.0</span><span class="token plain">.1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token number">1.3</span><span class="token plain">.31              </span><span class="token number">1.2</span><span class="token plain">.31              </span><span class="token number">1.1</span><span class="token plain">.2-5             </span><span class="token number">1.0</span><span class="token plain">.0</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token number">1.3</span><span class="token plain">.30              </span><span class="token number">1.2</span><span class="token plain">.30              </span><span class="token number">1.1</span><span class="token plain">.2-2</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token number">1.3</span><span class="token plain">.21              </span><span class="token number">1.2</span><span class="token plain">.21              </span><span class="token number">1.1</span><span class="token plain">.2</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token number">1.3</span><span class="token plain">.20              </span><span class="token number">1.2</span><span class="token plain">.20              </span><span class="token number">1.1</span><span class="token plain">.1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token number">1.3</span><span class="token plain">.11              </span><span class="token number">1.2</span><span class="token plain">.10              </span><span class="token number">1.1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token number">1.3</span><span class="token plain">.10              </span><span class="token number">1.2</span><span class="token plain">.0               </span><span class="token number">1.0</span><span class="token plain">.7</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token number">1.3</span><span class="token plain">.0               </span><span class="token number">1.1</span><span class="token plain">.61              </span><span class="token number">1.0</span><span class="token plain">.6</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token number">1.2</span><span class="token plain">.71              </span><span class="token number">1.1</span><span class="token plain">.60              </span><span class="token number">1.0</span><span class="token plain">.5-2</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token number">1.2</span><span class="token plain">.70              </span><span class="token number">1.1</span><span class="token plain">.51              </span><span class="token number">1.0</span><span class="token plain">.5</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token number">1.2</span><span class="token plain">.61              </span><span class="token number">1.1</span><span class="token plain">.50              </span><span class="token number">1.0</span><span class="token plain">.4</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token number">1.2</span><span class="token plain">.60              </span><span class="token number">1.1</span><span class="token plain">.4-3             </span><span class="token number">1.0</span><span class="token plain">.3</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">     </span><span class="token number">1.2</span><span class="token plain">.51              </span><span class="token number">1.1</span><span class="token plain">.4-2             </span><span class="token number">1.0</span><span class="token plain">.2</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">+ - </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">local</span><span class="token plain"> version</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">* - installed</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;</span><span class="token plain"> - currently </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> use</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ sdk </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><span class="token plain"> kotlin </span><span class="token number">1.3</span><span class="token plain">.50</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Downloading: kotlin </span><span class="token number">1.3</span><span class="token plain">.50</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">In progress</span><span class="token punctuation" style="color:rgb(248, 248, 242)">..</span><span class="token plain">.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">######################################################################### 100.0%</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Installing: kotlin </span><span class="token number">1.3</span><span class="token plain">.50</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Done installing</span><span class="token operator">!</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Setting kotlin </span><span class="token number">1.3</span><span class="token plain">.50 as default.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="replで動作確認">REPLで動作確認<a class="hash-link" href="#replで動作確認" title="見出しへの直接リンク">​</a></h2><p><code>kotlinc</code>をコマンドで打つと対話モードになります。</p><div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ kotlinc</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Welcome to Kotlin version 1.3.50 (JRE 11.0.4+11-post-Ubuntu-1ubuntu218.04.3)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Type :help for help, :quit for quit</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">&gt;&gt;&gt; println("hello world!")</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">hello world!</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">quit</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>めちゃくちゃ簡単に導入できました！</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[サクラエディタからShibaを起動する]]></title>
            <link>https://mt2m10.github.io/2019/09/27/_1</link>
            <guid>/2019/09/27/_1</guid>
            <pubDate>Fri, 27 Sep 2019 04:49:45 GMT</pubDate>
            <description><![CDATA[サクラエディタでmarkdownを書くときプレビュー画面がないのでShibaというmarkdownプレビューアプリを使っています。]]></description>
            <content:encoded><![CDATA[<p>サクラエディタでmarkdownを書くときプレビュー画面がないので<strong><code>Shiba</code></strong>というmarkdownプレビューアプリを使っています。</p><p><a href="https://github.com/rhysd/Shiba" target="_blank" rel="noopener noreferrer">https://github.com/rhysd/Shiba</a></p><p>Shiba.exeを自分で叩いて、ファイルを読み込ませるのが面倒なのでサクラエディタから起動させるようにしました。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="方法">方法<a class="hash-link" href="#方法" title="見出しへの直接リンク">​</a></h2><p><code>ツール &gt; 外部コマンド実行</code>でウィンドウを開きます。
「名前」のところに【ShibaのexeファイルのPath $F】を入力して実行ボタンを押します。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">C:\Program Files\Shiba-win32-x64\Shiba.exe $F</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[LinuxLiteでGoogleドライブを使う！]]></title>
            <link>https://mt2m10.github.io/2019/09/22/_1</link>
            <guid>/2019/09/22/_1</guid>
            <pubDate>Sun, 22 Sep 2019 01:29:43 GMT</pubDate>
            <description><![CDATA[Googleドライブがネットワークドライブとなって、ローカルでマウントして使えるようにするのがgoogle-drive-ocamlfuseです。便利。]]></description>
            <content:encoded><![CDATA[<p>Googleドライブがネットワークドライブとなって、ローカルでマウントして使えるようにするのが<code>google-drive-ocamlfuse</code>です。便利。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain"># リポジトリの追加</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">sudo add-apt-repository ppa:alessandro-strada/ppa</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># インストール</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">sudo apt-get update</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">sudo apt-get install -y google-drive-ocamlfuse</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># Google認証</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">google-drive-ocamlfuse</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># マウントディレクトリを作成</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">mkdir ~/Documents/googledrive</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># マウント実行</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">google-drive-ocamlfuse ~/Documents/googledrive</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考">参考<a class="hash-link" href="#参考" title="見出しへの直接リンク">​</a></h2><p><a href="https://github.com/astrada/google-drive-ocamlfuse/wiki" target="_blank" rel="noopener noreferrer">astrada/google-drive-ocamlfuse</a></p><p><a href="https://asuhen.net/2015/04/11/linux%E3%81%A7google%E3%83%89%E3%83%A9%E3%82%A4%E3%83%96%E3%82%92%E4%BD%BF%E3%81%88%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E3%81%97%E3%81%A6%E3%81%BF%E3%81%9F%E3%81%AE%E3%81%A7%E3%83%A1%E3%83%A2%E6%AE%8B/" target="_blank" rel="noopener noreferrer">LinuxでGoogleドライブを使えるようにしてみたのでメモ残しておく</a></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[LinuxLiteにPeerCast]]></title>
            <link>https://mt2m10.github.io/2019/09/21/_1</link>
            <guid>/2019/09/21/_1</guid>
            <pubDate>Sat, 21 Sep 2019 01:47:24 GMT</pubDate>
            <description><![CDATA[Linux インストールするたびにやってることのまとめ。あくまで視聴するために必要なものを入れます。]]></description>
            <content:encoded><![CDATA[<p>Linux インストールするたびにやってることのまとめ。あくまで視聴するために必要なものを入れます。</p><ul><li><a href="#%E8%89%B2%E3%80%85%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB">色々インストール</a><ul><li><a href="#%E5%89%8D%E6%8F%90%E6%9D%A1%E4%BB%B6">前提条件</a></li><li><a href="#peercaststation">PeerCastStation</a></li><li><a href="#mono">mono</a></li><li><a href="#qpeercastyp">QPeerCastYP</a></li><li><a href="#pureplayer">PurePlayer</a></li></ul></li><li><a href="#%E5%8B%95%E4%BD%9C%E7%A2%BA%E8%AA%8D">動作確認</a><ul><li><a href="#qpeercastyp-%E3%81%AE%E8%A8%AD%E5%AE%9A">QPeerCastYP の設定</a></li></ul></li><li><a href="#%E3%81%8A%E3%81%BE%E3%81%91">おまけ</a><ul><li><a href="#epcyp">epcyp</a></li></ul></li><li><a href="#%E5%8F%82%E8%80%83">参考</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="色々インストール">色々インストール<a class="hash-link" href="#色々インストール" title="見出しへの直接リンク">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="前提条件">前提条件<a class="hash-link" href="#前提条件" title="見出しへの直接リンク">​</a></h3><p>ディレクトリ構造は以下とします。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">~/</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">├── Desktop</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│&nbsp;&nbsp; ├── Untitled-1.md</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│&nbsp;&nbsp; ├── computer.desktop</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│&nbsp;&nbsp; ├── helpmanual.desktop</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│&nbsp;&nbsp; ├── network.desktop</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│&nbsp;&nbsp; ├── recyclebin.desktop</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│&nbsp;&nbsp; ├── settings.desktop</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│&nbsp;&nbsp; └── userfiles.desktop</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">├── Documents</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">├── Downloads</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">├── Music</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">├── Peca ←★今回の作業ディレクトリ</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">├── Pictures</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">├── Public</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">├── Templates</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">└── Videos</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="peercaststation">PeerCastStation<a class="hash-link" href="#peercaststation" title="見出しへの直接リンク">​</a></h3><p><a href="http://www.pecastation.org/" target="_blank" rel="noopener noreferrer">http://www.pecastation.org/</a></p><p>いつも開発版を使っているのでそっちをダウンロードします。好みなのでお好きなようにどうぞ。</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> ~/Peca</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">curl</span><span class="token plain"> -O http://www.pecastation.org/files/PeerCastStation-2.7.2.1.zip</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">unzip</span><span class="token plain"> PeerCastStation-2.7.2.1.zip</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="mono">mono<a class="hash-link" href="#mono" title="見出しへの直接リンク">​</a></h3><p>mono は Linux で PeerCastStation を使用するためのツールです。apt を使ってインストールできますが、バージョンに違いなのか大体うまくいかないので最新版のソースをダウンロードしてビルドします。</p><p>※2019/9/21 時点の最新バージョンは 6.0.0.334 でした。各バージョンのソースは<a href="https://download.mono-project.com/sources/mono/" target="_blank" rel="noopener noreferrer">ここ</a>から取得できます。</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> ~/Peca</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">apt</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><span class="token plain"> -y </span><span class="token function" style="color:rgb(80, 250, 123)">git</span><span class="token plain"> autoconf libtool automake build-essential gettext cmake python </span><span class="token function" style="color:rgb(80, 250, 123)">curl</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">curl</span><span class="token plain"> -O https://download.mono-project.com/sources/mono/mono-6.0.0.334.tar.xz</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">tar</span><span class="token plain"> xvf mono-6.0.0.334.tar.xz</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> mono-6.0.0.334</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">./configure</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">make</span><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)"># 30分以上かかりました</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">make</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="qpeercastyp">QPeerCastYP<a class="hash-link" href="#qpeercastyp" title="見出しへの直接リンク">​</a></h3><p>QPeerCastYP は PeerCast 補助ツールです。配信の一覧を表示したりするツールです。</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> ~/Peca</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">apt</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><span class="token plain"> -y build-essential libqt4-dev</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">git</span><span class="token plain"> clone https://github.com/bookdraft/QPeerCastYP.git</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> QPeerCastYP</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">./configure</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">make</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">make</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>これで<code>Menu</code>の<code>マルチメディア</code>に QPeerCastYP が表示されるはずです。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="pureplayer">PurePlayer<a class="hash-link" href="#pureplayer" title="見出しへの直接リンク">​</a></h3><p>PurePlayer<!-- -->*<!-- -->は、Linux 用のメディアプレイヤー及び PeerCast 視聴プレイヤーです。QPeerCastYP と連携して視聴できるようにします。</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> ~/Peca</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">apt</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><span class="token plain"> -y mplayer qt4-default g++</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">git</span><span class="token plain"> clone https://github.com/nelkana/PurePlayer_As.git</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> PurePlayer_As</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">qmake</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">make</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="動作確認">動作確認<a class="hash-link" href="#動作確認" title="見出しへの直接リンク">​</a></h2><p>ターミナルで<code>PeerCastStation.exe</code>があるディレクトリに移動して以下コマンドを実行。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">mono PeerCastStation.exe</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ブラウザから<code>http://localhost:7144</code>にアクセスしてきちんと表示されれば OK。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="qpeercastyp-の設定">QPeerCastYP の設定<a class="hash-link" href="#qpeercastyp-の設定" title="見出しへの直接リンク">​</a></h3><p>QPeerCastYP 起動後、<code>設定 &gt; プレイヤ</code>に移動します。各項目に対して色々設定します。</p><table><thead><tr><th>項目</th><th>値</th></tr></thead><tbody><tr><td>プログラム</td><td>/home/{ユーザー名}/Peca/PurePlayer_As/pureplayer</td></tr><tr><td>種類</td><td>wmv<!-- -->|<!-- -->ogm<!-- -->|<!-- -->nsv<!-- -->|<!-- -->flv</td></tr><tr><td>引数</td><td>$STREAM_URL</td></tr></tbody></table><p>配信の一覧から配信者のリンクを押したら<code>PurePlayer</code>が開き、配信が写れば OK。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="おまけ">おまけ<a class="hash-link" href="#おまけ" title="見出しへの直接リンク">​</a></h2><p>中山さん(<a href="https://twitter.com/mrnakayama" target="_blank" rel="noopener noreferrer">@mrnakayama</a>)作の PeerCast 補助ツールも紹介します。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="epcyp">epcyp<a class="hash-link" href="#epcyp" title="見出しへの直接リンク">​</a></h4><p>ダウンロードから起動まで。</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> ~/Peca</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">wget</span><span class="token plain"> https://github.com/mrhorin/epcyp/releases/download/v1.2.0/epcyp_v1.2.0_linux.zip</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">unzip</span><span class="token plain"> epcyp_v1.2.0_linux.zip</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> epcyp-linux-x64</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">./epcyp</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>起動したら歯車アイコンを押して設定画面を開きます。</p><p>PeerCast タブ</p><table><thead><tr><th>項目</th><th>値</th></tr></thead><tbody><tr><td>PeerCast 本体</td><td>/home/{ユーザー名}/Peca/PeerCastStation-2.7.2.1/PeerCastStation.exe</td></tr><tr><td>mono を使用して起動する</td><td>ON</td></tr></tbody></table><p>YP タブ</p><table><thead><tr><th>名前</th><th>URL</th></tr></thead><tbody><tr><td>SP</td><td><a href="http://bayonet.ddo.jp/sp/" target="_blank" rel="noopener noreferrer">http://bayonet.ddo.jp/sp/</a></td></tr><tr><td>TP</td><td><a href="http://temp.orz.hm/yp/" target="_blank" rel="noopener noreferrer">http://temp.orz.hm/yp/</a></td></tr></tbody></table><p>プレイヤー</p><table><thead><tr><th>項目</th><th>値</th></tr></thead><tbody><tr><td>タイプ(正規表現)</td><td>WMV<!-- -->|<!-- -->FLV</td></tr><tr><td>再生プレイヤー</td><td>/home/{ユーザー名}/Peca/PurePlayer_As/pureplayer</td></tr><tr><td>引数</td><td>"$x"</td></tr></tbody></table><p>全部設定したら OK ボタン押して保存します。</p><p>配信の一覧を読み込み直すと SP と TP の一覧が出ます。ダブルクリックするとプレイヤーが起動して視聴できます。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考">参考<a class="hash-link" href="#参考" title="見出しへの直接リンク">​</a></h2><p><a href="https://qiita.com/DoG_peer/items/ef5b3869a5a7b39aa6d3" target="_blank" rel="noopener noreferrer">Kubuntu16.04 で peercast</a></p><p><a href="https://qiita.com/takanemu/items/be47fbea4c1483776c8f" target="_blank" rel="noopener noreferrer">新しいバージョンの Mono をインストールする方法</a></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[LPIC Level1 Ver5.0に合格しました]]></title>
            <link>https://mt2m10.github.io/2019/09/16/_1</link>
            <guid>/2019/09/16/_1</guid>
            <pubDate>Mon, 16 Sep 2019 09:51:38 GMT</pubDate>
            <description><![CDATA[2、3ヶ月ほど勉強してLPIC Level1 Ver5.0に合格しました。勉強したことについて書きます！]]></description>
            <content:encoded><![CDATA[<p>2、3ヶ月ほど勉強してLPIC Level1 Ver5.0に合格しました。勉強したことについて書きます！</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="結論">結論<a class="hash-link" href="#結論" title="見出しへの直接リンク">​</a></h2><p><strong>Ping-t</strong>を使って勉強すればとれる！
※ 他の資格取得者たちの多くも同じ感想ですが、多分これが一番効率が良いと思いました。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="利用した参考書サイト">利用した参考書・サイト<a class="hash-link" href="#利用した参考書サイト" title="見出しへの直接リンク">​</a></h2><ul><li><a href="https://www.amazon.co.jp/dp/4798160490" target="_blank" rel="noopener noreferrer">Linux教科書 LPICレベル1</a></li><li><a href="https://www.amazon.co.jp/dp/4798160857" target="_blank" rel="noopener noreferrer">Linux教科書 LPICレベル1 スピードマスター問題集</a></li><li><a href="https://ping-t.com/" target="_blank" rel="noopener noreferrer">Ping-t</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="学習法">学習法<a class="hash-link" href="#学習法" title="見出しへの直接リンク">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="lv1-101">Lv1-101<a class="hash-link" href="#lv1-101" title="見出しへの直接リンク">​</a></h3><ol><li><code>Linux教科書 LPICレベル1 スピードマスター問題集</code>を2,3週解く</li><li><code>Linux教科書 LPICレベル1</code>を1読する</li><li><code>Ping-t</code>をひたすら解く</li></ol><p>まず、<code>Linux教科書 LPICレベル1</code>（以下<code>あずき本</code>といいます）を読みました。しかし、読んでもちんぷんかんぷん。</p><p>一旦諦め、<code>Linux教科書 LPICレベル1 スピードマスター問題集</code>（以下<code>スピマス</code>といいます）を2,3週ほどしました。概念を理解するよりも、問題をときながら慣れていく作戦に変更しました。</p><p>慣れてきたところで、再度<code>あずき本</code>を読みました。最初よりは理解できたのと、<code>スピマス</code>では内容が薄いところが補えた感じがありました。</p><p>この頃に受験の予約をしています。</p><p>この2つの参考書を見るのが飽きてきたので<code>Ping-t</code>に手を出してみました。使ってみると問題数がめちゃくちゃ豊富ですげー便利です。受験当日までには3割ほどしかこなせませんでしたが、もっと早くやっていれば・・・と後悔しました。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="結果">結果<a class="hash-link" href="#結果" title="見出しへの直接リンク">​</a></h3><p>630/800点</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="lv1-102">Lv1-102<a class="hash-link" href="#lv1-102" title="見出しへの直接リンク">​</a></h3><ol><li><code>Ping-t</code>をひたすら解く</li><li><code>あずき本</code>と<code>スピマス</code>の模擬試験を解く</li></ol><p>前回の反省を踏まえ、<code>Ping-t</code>をひたすら解きました。600問以上ありますが、全て金になるまでやっています。
※Lv1-101は無料で問題を解くことができますが、Lv-102から有料になります。
※金って何？って人は<a href="https://ping-t.com/modules/smartfaq/faq.php?faqid=20" target="_blank" rel="noopener noreferrer">こちら</a>をご覧ください。</p><p>この時点で受かる自信はついています。せっかく本が2つあるのでそれぞれの模擬試験を実施。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="結果-1">結果<a class="hash-link" href="#結果-1" title="見出しへの直接リンク">​</a></h3><p>640/800点
もっと点数高いと思ったんだけどなー(◞‸◟)</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="受験時の注意点">受験時の注意点<a class="hash-link" href="#受験時の注意点" title="見出しへの直接リンク">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="日本語訳が微妙">日本語訳が微妙<a class="hash-link" href="#日本語訳が微妙" title="見出しへの直接リンク">​</a></h3><p>たまに問題文や選択肢の中に？？ってやつが出てきます。原文（英語）でも確認できるので焦らず見てみたほうがよいです。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="取得した目的">取得した目的<a class="hash-link" href="#取得した目的" title="見出しへの直接リンク">​</a></h2><p>普段は設計やアプリ開発を行っています。その中でローカル環境や検証環境の構築をすることがあります。<code>cd</code>や<code>ls</code>など基本中の基本のコマンドは分かりますが、知見がないなーと感じていたので受験することにしました。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="感想">感想<a class="hash-link" href="#感想" title="見出しへの直接リンク">​</a></h2><p>SE兼PGぐらいの立ち位置のわたしとしては、業務で役に立つ場面はなさそうだなーと感じました。もちろんLinuxを少しぐらいは触れますよーの証明にはなるでしょう。なので、無理して取る資格ではないです。</p><p>しかし、仕事内容がLinuxメインの人は絶対取ったほうが得です！そういう人たちはLevel1だけでなくLevel2,3も目指しましょう！</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Tumblrでシンタックスハイライト]]></title>
            <link>https://mt2m10.github.io/2019/09/06/_1</link>
            <guid>/2019/09/06/_1</guid>
            <pubDate>Fri, 06 Sep 2019 13:54:48 GMT</pubDate>
            <description><![CDATA[Tumblrでシンタックスハイライトを適用するには大きく2種類あります。]]></description>
            <content:encoded><![CDATA[<p>Tumblrでシンタックスハイライトを適用するには大きく2種類あります。</p><ol><li>Tumblr標準のシンタックスハイライトを使う</li><li>テーマを編集して自前で実装</li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-tumblr標準のシンタックスハイライトを使う">1. Tumblr標準のシンタックスハイライトを使う<a class="hash-link" href="#1-tumblr標準のシンタックスハイライトを使う" title="見出しへの直接リンク">​</a></h2><p>設定画面から <code>テーマの編集</code> ボタンをクリックします。</p><p><img loading="lazy" src="https://66.media.tumblr.com/c7b55c597e8d1a00eeb1b3ea88e17ec8/tumblr_pxig1aBngv1yvn0qxo3_r1_640.png" class="img_ev3q"></p><p>左ペインのテーマオプションから <code>Syntax highlighting</code> をOnにして保存します。</p><p><img loading="lazy" src="https://66.media.tumblr.com/a6a7099aaa7c47e874bd61e732ce4ba5/tumblr_pxig1aBngv1yvn0qxo6_r1_400.png" class="img_ev3q"></p><p>これだけです。</p><p>before:</p><p><img loading="lazy" src="https://66.media.tumblr.com/f64694f30e8ed0226bb98b34e310a928/tumblr_pxig1aBngv1yvn0qxo5_r1_400.png" class="img_ev3q"></p><p>after:</p><p><img loading="lazy" src="https://66.media.tumblr.com/47d972a06656e2a774a8b17314e8c80b/tumblr_pxig1aBngv1yvn0qxo7_r1_1280.png" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-テーマを編集して自前で実装">2. テーマを編集して自前で実装<a class="hash-link" href="#2-テーマを編集して自前で実装" title="見出しへの直接リンク">​</a></h2><p>このサイトを参考にしました！</p><p><a href="https://rfs.jp/sb/javascript/js-lab/code-prettify.html" target="_blank" rel="noopener noreferrer">https://rfs.jp/sb/javascript/js-lab/code-prettify.html</a></p><p>テーマの編集から <code>HTMLを編集</code>　リンクをクリックします。</p><p><img loading="lazy" src="https://66.media.tumblr.com/7f86012c2d6e6eba557d19b6b1a9f8e7/tumblr_pxig1aBngv1yvn0qxo8_r1_400.png" class="img_ev3q"></p><p>`</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[NifmoからOCNモバイルONEへ乗り換え]]></title>
            <link>https://mt2m10.github.io/2019/08/04/_1</link>
            <guid>/2019/08/04/_1</guid>
            <pubDate>Sun, 04 Aug 2019 11:29:00 GMT</pubDate>
            <description><![CDATA[使っているスマートフォンが壊れかけていて、新しいのが欲しいなーと思い色々見たのですが、普通に買うとけっこう高い。安くても３万ぐらいはする。。。]]></description>
            <content:encoded><![CDATA[<p>使っているスマートフォンが壊れかけていて、新しいのが欲しいなーと思い色々見たのですが、普通に買うとけっこう高い。安くても３万ぐらいはする。。。
格安スマホのキャンペーンを利用すると、かなりお得に乗り換えできそうだったので、２０１５年から使っていたNifMoから卒業することにしました。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="キャンペーンの情報収集">キャンペーンの情報収集<a class="hash-link" href="#キャンペーンの情報収集" title="見出しへの直接リンク">​</a></h2><p>乗り換えるにもたくさん会社があり、自力で調査するのがめんどうだったので、<a href="https://kakuyasu-sim.jp" target="_blank" rel="noopener noreferrer">格安SIMとスマホ比較</a>を参考にしました。
このサイトは割と更新頻度が高く、生きた情報が多いのでとても役に立ちます。キャンペーン情報以外にも通信速度やスマホ評価など情報量が多いので、気になるスマホが出たときは目を通すことがあります。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="選んだ会社">選んだ会社<a class="hash-link" href="#選んだ会社" title="見出しへの直接リンク">​</a></h2><p>今回はOCNモバイルONEで契約することにしました。選んだポイントは2つ。</p><ol><li>端末代の安さ</li><li>月々の基本料金</li></ol><h3 class="anchor anchorWithStickyNavbar_LWe7" id="端末代の安さ">端末代の安さ<a class="hash-link" href="#端末代の安さ" title="見出しへの直接リンク">​</a></h3><p>今回買うのは<a href="https://consumer.huawei.com/jp/phones/nova-lite3/specs/" target="_blank" rel="noopener noreferrer">HUAWEI nova lite 3</a>です。3,480円と激安です。定価は30,000円ぐらい、価格.comで一番安いものでも20,000円強なのでかなり安くなっています。
HUAWEIは、アメリカの制裁関連でいろいろありますが気にしません。根拠はないですが影響ないと思っています。仮にあったとしても、OSのバージョンがアップグレードできないぐらいで使用はできるはずなので買うことにしました。</p><p><a href="https://1.bp.blogspot.com/-89jL6YVtw3o/XUbBy0SXu6I/AAAAAAAAEv0/jIaTKW0JGTEV-eHZOw5n3dSifoGurczhgCLcBGAs/s1600/%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%2583%25E3%2583%2588_2019-08-04_18-21-47.png" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://1.bp.blogspot.com/-89jL6YVtw3o/XUbBy0SXu6I/AAAAAAAAEv0/jIaTKW0JGTEV-eHZOw5n3dSifoGurczhgCLcBGAs/s320/%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%2583%25E3%2583%2588_2019-08-04_18-21-47.png" class="img_ev3q"></a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="月々の基本料金">月々の基本料金<a class="hash-link" href="#月々の基本料金" title="見出しへの直接リンク">​</a></h3><p>キャンペーンのおかげで２年間３２０円割引です。今回、3GB/月コースを選びます。1,８００円→１,４８０円になり、まぁまぁ安い。でも、今で月１,4００円 + 通話料なので気持ち高くなりますが、端末代を考えれば十分でしょう。</p><p><a href="https://3.bp.blogspot.com/-rHQ4In-CMBM/XUbB8tiIfQI/AAAAAAAAEv4/SbvutfOqJLstTcri6VvSdNlTDX1Xy6OvQCLcBGAs/s1600/%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%2583%25E3%2583%2588_2019-08-04_18-18-21.png" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://3.bp.blogspot.com/-rHQ4In-CMBM/XUbB8tiIfQI/AAAAAAAAEv4/SbvutfOqJLstTcri6VvSdNlTDX1Xy6OvQCLcBGAs/s320/%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%2583%25E3%2583%2588_2019-08-04_18-18-21.png" class="img_ev3q"></a></p><p><a href="https://3.bp.blogspot.com/-NJKIkelRHcc/XUbB92-ez7I/AAAAAAAAEv8/mgJn9y_Y-Q4XaDXa7ckVf7Skbzr__rBKQCLcBGAs/s1600/%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%2583%25E3%2583%2588_2019-08-04_18-29-42.png" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://3.bp.blogspot.com/-NJKIkelRHcc/XUbB92-ez7I/AAAAAAAAEv8/mgJn9y_Y-Q4XaDXa7ckVf7Skbzr__rBKQCLcBGAs/s320/%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%2583%25E3%2583%2588_2019-08-04_18-29-42.png" class="img_ev3q"></a></p><p>※追記
この料金は税抜だったので、税込1,598.4円と書いてありました。完全に見落としていました。１,６００円なら、110MB/日のプランの方にしたほうが良かったかも。。。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="気になる点">気になる点<a class="hash-link" href="#気になる点" title="見出しへの直接リンク">​</a></h2><ol><li>通信速度</li></ol><h3 class="anchor anchorWithStickyNavbar_LWe7" id="通信速度">通信速度<a class="hash-link" href="#通信速度" title="見出しへの直接リンク">​</a></h3><p>気になるのは平日の昼・夜の遅さ。NifMoも十分遅いが、それ以上だと嫌だなーと思ってる。場合によっては６ヶ月後にまた解約しようと思う。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="申し込み開通までの日数と手続き流れ">申し込み～開通までの日数と手続き流れ<a class="hash-link" href="#申し込み開通までの日数と手続き流れ" title="見出しへの直接リンク">​</a></h2><p>忘れないようにメモします。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="20190803-1604">2019/08/03 16:04<a class="hash-link" href="#20190803-1604" title="見出しへの直接リンク">​</a></h4><p>NifMo MNP転出受付</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="20190803-2157">2019/08/03 21:57<a class="hash-link" href="#20190803-2157" title="見出しへの直接リンク">​</a></h4><p>NifMo MNP予約番号が発行される</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="20190803-2222">2019/08/03 22:22<a class="hash-link" href="#20190803-2222" title="見出しへの直接リンク">​</a></h4><p>【OCN】お申込受付のお知らせ</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="20190808-1500">2019/08/08 15:00<a class="hash-link" href="#20190808-1500" title="見出しへの直接リンク">​</a></h4><p>スマートフォン受け取り完了
OCNから「OCN会員登録証」が来ていないためMNP開通手続きはできず。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="-20190811-1500"><a href="af://n55" target="_blank" rel="noopener noreferrer"> </a>2019/08/11 15:00<a class="hash-link" href="#-20190811-1500" title="見出しへの直接リンク">​</a></h4><p>「OCN会員登録証」の書類がいくら待っても来ないため改めて確認したところ、郵送ではなくWeb交付だったらしい。
確かにPDFファイルをダウンロードした記憶がある。。。見てみるとまさに欲しかった情報だった！</p><ul><li><p>OCN自動チャットによるお問い合わせの回答</p><blockquote><p>「Web表示（電子交付）」をご選択のお客様は、PDFでの会員登録証のダウンロード画面が表示されダウンロードしてご確認となります。</p><p>「Web表示（電子交付）」にデフォルトでチェックが入っている仕様となっている為、どちらをご選択したかや「郵送」を選択した覚えがないお客様の場合は、PDFでのダウンロード画面が表示された際に、ダウンロードし忘れている可能性がございます。</p><p>恐れ入りますが、再度ダウンロードすることはできませんので、再発行は書面での発行となります。</p></blockquote></li></ul><p><a href="http://s.ocn.jp/mnp01" target="_blank" rel="noopener noreferrer">http://s.ocn.jp/mnp01</a> にアクセスして「MNP開通のお申込み」を行った。
ログインには「OCN会員登録証」の「■OCNメール」にあるメールアドレスとパスワードを入力すればOK。</p><p>これで無事申し込み完了！！！</p><p>あとはOCNでんわかけ放題とマイセキュアの解約を忘れずにやる。解約手続きの方法は以下サイトの通りにやったらできました。</p><ul><li><a href="https://blog-a.net/ocn-mobile-one-kakehoudai-kaiyaku/" target="_blank" rel="noopener noreferrer">OCNモバイルONEかけ放題オプションの解約・変更方法と無料の条件など</a></li><li><a href="https://blog-a.net/ocn-mobile-one-mysecure-kai/" target="_blank" rel="noopener noreferrer">OCNモバイルONEマイセキュアの解約条件・初月無料期間と料金割引を解説！</a></li></ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[KGI・KPI・CSFめも]]></title>
            <link>https://mt2m10.github.io/2019/07/23/_1</link>
            <guid>/2019/07/23/_1</guid>
            <pubDate>Tue, 23 Jul 2019 10:37:00 GMT</pubDate>
            <description><![CDATA[KGI・KPI・CSFを最近知ったのですが、忘れそうなのでメモ。]]></description>
            <content:encoded><![CDATA[<p>KGI・KPI・CSFを最近知ったのですが、忘れそうなのでメモ。</p><ul><li><p>KGI(key goal indicator)</p><p>  重要目標評価指標。<strong>目標</strong>。定量的に表す。</p></li><li><p>KPI(key performance indicator)</p><p>  重要業績評価指標。KGIを達成するための<strong>指標</strong>。定量的に表す。KPIが達成できれば、KGIが達成できるように設定する。</p></li><li><p>CSF(critical success factor)</p><p>  主要成功要因。目標達成するために力を入れる<strong>活動・課題</strong>。KGIを達成するための最も影響がある要因のこと。目指すべき方向性や行動すべきことを決定づける。</p></li></ul><p>KGI→CSF→KPIの順に決めていく。</p><ol><li>目標を立てる（KGI）</li><li>目標を達成するために何をすべきか分析する</li><li>最も注力して取り組むべきことを決める（CSF）</li><li>CSFからKGIを達成するための指標を決める（KPI）</li></ol><p>大雑把にいうとこんな理解。目標管理とかで考える際に役に立ちそう。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[オブジェクト型とは何か調べてみた]]></title>
            <link>https://mt2m10.github.io/2019/07/22/_1</link>
            <guid>/2019/07/22/_1</guid>
            <pubDate>Mon, 22 Jul 2019 13:30:00 GMT</pubDate>
            <description><![CDATA[オブジェクト型の変数]]></description>
            <content:encoded><![CDATA[<blockquote><p>オブジェクト型の変数</p></blockquote><p>この言葉を目にしたとき、Objectクラスを指しているのだと思いました。しかし、他の文章とのつじつまが合わなくて混乱してしまったので、調べてみました。</p><p>プリミティブ型以外をオブジェクト型と呼ぶそう。</p><ul><li>String</li><li>Integer</li><li>Boolean</li><li>自作クラス</li></ul><p>など、全てオブジェクト型。
言われてみると納得できますね。
自分がアホだと思った瞬間でした。</p><iframe allowfullscreen="" src="https://www.youtube.com/embed/temtODQFbQY" width="280" height="172" frameborder="0"></iframe>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[MarkdownエディタはTypora]]></title>
            <link>https://mt2m10.github.io/2019/07/08/_1</link>
            <guid>/2019/07/08/_1</guid>
            <pubDate>Mon, 08 Jul 2019 00:25:00 GMT</pubDate>
            <description><![CDATA[Markdownを利用するときにはTyporaを使っています。]]></description>
            <content:encoded><![CDATA[<p>Markdownを利用するときにはTyporaを使っています。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="特徴">特徴<a class="hash-link" href="#特徴" title="見出しへの直接リンク">​</a></h2><ul><li>編集部分とプレビューが1画面で構成されている（VSCodeなど他のエディタでは2画面構成になっていることが多い）</li><li>Windows, Mac, Linuxのどれでも使える</li><li>Pdf, html, docxなどがプラグインを追加しなくても出力できる</li><li>Markdown記法を覚えていなくても書ける（マウスポチポチでテーブルの作成とかできちゃう）</li><li>ショートカットキーが豊富</li></ul><p>Windows, Mac, Linuxそれぞれで使ってみましたが、違和感なく使えています。</p><p>また、プレビュー通りにhtmlなどに出力されるのも大きなポイント。他のエディタの場合、プラグインを追加することが多いので、どうしてもプレビューとずれてしまうことがありますが、Typoraの場合はそれがありません。</p><p>とても使いやすいエディタですので、エディタに悩んでいる方は1度使ってみてはどうでしょうか。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[文章が苦手]]></title>
            <link>https://mt2m10.github.io/2019/07/04/_1</link>
            <guid>/2019/07/04/_1</guid>
            <pubDate>Thu, 04 Jul 2019 12:04:00 GMT</pubDate>
            <description><![CDATA[文章を書くのがとっても苦手。]]></description>
            <content:encoded><![CDATA[<p>文章を書くのがとっても苦手。
国語の点数も低かったし、小説なども好きではなかったです。でも、仕事していると相手に説明をすることが多いし、資料作成で文章も考えることが多いので、いつまでも苦手ではいられないと思いました。</p><p>最初は飛び交うメールを読みながら分かりやすいなーとかこの表現好きだなーと思うものを自分で使ってみました。
次に人の説明を注意深く聞くことにしました。自分が説明を聞くときはもちろん、聞こえてくる会話の中からも聞き耳をたてて、何か感じ取れるものはないか考えていました。</p><p>その中で大事と思ったことがあります。</p><ul><li>話の前提となることを両者で合わせる</li><li>結論は早めに言う</li><li>目的を伝える</li></ul><p>これらがないと、そもそも何の話をしているのか分からないことが多かったです。</p><p>また、本から学ぶことにしました。何かを学ぶときは本を利用しています。本は丁寧に書かかれていて理解しやすいイメージを持っているからです。
数ある本の中から、結城浩さんの<a href="https://www.amazon.co.jp/dp/448009525X" target="_blank" rel="noopener noreferrer">数学文章作法基礎編</a>を選びました。
ページ数も少なくかなり読みやすい本でした。これはおすすめです。</p><p>ということで、今日の書く練習はここまでにします。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[カイゼン・ジャーニー第1部感想]]></title>
            <link>https://mt2m10.github.io/2019/07/02/_2</link>
            <guid>/2019/07/02/_2</guid>
            <pubDate>Tue, 02 Jul 2019 11:53:00 GMT</pubDate>
            <description><![CDATA[以前から気になっていた本がkindleでセールしていたので購入しました。]]></description>
            <content:encoded><![CDATA[<p>以前から気になっていた本がkindleでセールしていたので購入しました。
<a href="https://www.amazon.co.jp/dp/B078HZKLMB/" target="_blank" rel="noopener noreferrer">カイゼン・ジャーニー たった1人からはじめて、「越境」するチームをつくるまで</a>
第1部を読んで個人的に気になったところをまとめました。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ふりかえりで仕事のやりかたを見直す">ふりかえりで仕事のやりかたを見直す<a class="hash-link" href="#ふりかえりで仕事のやりかたを見直す" title="見出しへの直接リンク">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="kpt">KPT<a class="hash-link" href="#kpt" title="見出しへの直接リンク">​</a></h3><p>Keep Problem Tryの略。</p><ul><li><p>Keep</p><p>  やってよかったこと。続けたいこと</p></li><li><p>Problem</p><p>  問題点。改善したいこと</p></li><li><p>Try</p><p>  次に試したいこと</p></li></ul><p>これを以下図のように区分けする。
次に付箋などに書き出して貼っていく。</p><blockquote><p>【振り返りのフレームワーク】ＫＰＴ（Keep，Problem，Try）
<a href="https://ameblo.jp/tetsu7s/entry-10358337824.html" target="_blank" rel="noopener noreferrer">https://ameblo.jp/tetsu7s/entry-10358337824.html</a></p></blockquote><p><img loading="lazy" src="https://stat.ameba.jp/user_images/20100603/23/tetsu7s/f8/dc/g/o0453026810573539714.gif" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="書き出し方">書き出し方<a class="hash-link" href="#書き出し方" title="見出しへの直接リンク">​</a></h3><ul><li><p>Keep</p><ul><li>続けたいこと、よかったことを挙げる。文字通りですね。</li></ul></li><li><p>Problem</p><ul><li>問題点・改善したいことを挙げる。</li><li>「もやもや」「気にかかっていること」を挙げる。ただし、何が起きているか説明してもらう必要あり。</li></ul></li><li><p>Try</p><ul><li><p>次に試したいことを挙げる。</p><p>  たくさんある場合は優先順位をつけること。その中から期間内にいくつやるかチームメンバーと話しながら決める。</p></li></ul></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="作業を忘れないためにはどうするべきか">作業を忘れないためにはどうするべきか<a class="hash-link" href="#作業を忘れないためにはどうするべきか" title="見出しへの直接リンク">​</a></h2><p>タスクを書き出す。見える化する。
つまり、タスクマネジメントのやり方をモノにする。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="書き出すときのコツ">書き出すときのコツ<a class="hash-link" href="#書き出すときのコツ" title="見出しへの直接リンク">​</a></h3><p>名詞より名詞 + 動詞で表現する。
例
× -&gt; △△処理
○ -&gt; △△処理をプログラミングする</p><p>タスクを洗い出すときに以下5つをはっきりさせておく。</p><ol><li>誰から依頼されたか</li><li>次は誰に渡すのか</li><li>期限はいつか</li><li>作業時間の目安</li><li>タスクの完了条件</li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="認識のズレがどうしても起きてしまう">認識のズレがどうしても起きてしまう<a class="hash-link" href="#認識のズレがどうしても起きてしまう" title="見出しへの直接リンク">​</a></h2><p>やりたいことの粒度が大きすぎていることが原因。
掘り下げないので内容が曖昧なまま進めていることが多いはず。
まずは細かくするところから始めるとよい。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="タスクボードを利用してタスクの見える化">タスクボードを利用してタスクの見える化<a class="hash-link" href="#タスクボードを利用してタスクの見える化" title="見出しへの直接リンク">​</a></h2><ul><li>TODO（やること）</li><li>DOING（やってること）</li><li>DONE（終わったこと）</li></ul><p>先々のタスクはParking Lot, Iceboxに保管しておく。
また、DOINGは原則として1つ。複数のタスクを置くと作業効率が落ちるため。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="最後に">最後に<a class="hash-link" href="#最後に" title="見出しへの直接リンク">​</a></h2><p>第1部の中で好きな言葉あります。</p><blockquote><p>行動を変え新たな一歩を踏み出すのに「遅すぎる」ということはない。行動を始めるべきだと気づいたその時が、その人にとっての最速のタイミングだ。</p></blockquote><p>勉強を頑張り始めたのが、社会人になってからなので、学生時代を後悔するときがありますが、この言葉を見てまだまだ大丈夫なんだなーと思いました！</p><p>さて、第1部はこれで終わりです。
気分が乗れば第2部以降も感想を書いていきます。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[デバイスをマウントする]]></title>
            <link>https://mt2m10.github.io/2019/07/02/_1</link>
            <guid>/2019/07/02/_1</guid>
            <pubDate>Mon, 01 Jul 2019 21:03:00 GMT</pubDate>
            <description><![CDATA[前提]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="前提">前提<a class="hash-link" href="#前提" title="見出しへの直接リンク">​</a></h2><ul><li>デバイスが認識済みであること</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="マウント">マウント<a class="hash-link" href="#マウント" title="見出しへの直接リンク">​</a></h2><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">sudo mount /dev/sdb /mnt</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li><p>mount
コマンド。</p></li><li><p>/dev/sdb
デバイス上のファイルシステムを指定する。</p></li></ul><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">dmesg | grep -E "sd(a|b)"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>で確認できるっぽい</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ dmesg | grep -E "sd(a|b)"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">[    2.273168] sd 0:0:0:0: [sda] 976773168 512-byte logical blocks: (500 GB/466 GiB)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">[    2.273170] sd 0:0:0:0: [sda] 4096-byte physical blocks</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">[    2.273186] sd 0:0:0:0: [sda] Write Protect is off</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">[    2.273189] sd 0:0:0:0: [sda] Mode Sense: 00 3a 00 00</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">[    2.273230] sd 0:0:0:0: [sda] Write cache: enabled, read cache: enabled, doesn't support DPO or FUA</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">[    2.276973]  sda: sda1 sda2 sda3</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">[    2.277465] sd 0:0:0:0: [sda] Attached SCSI disk</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">[    5.662038] EXT4-fs (sda3): mounted filesystem with ordered data mode. Opts: (null)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">[    9.394264] EXT4-fs (sda3): re-mounted. Opts: errors=remount-ro</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li>/mnt
マウント先。マウントするディレクトリは予め作成しておくこと。</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="マウントに失敗した場合">マウントに失敗した場合<a class="hash-link" href="#マウントに失敗した場合" title="見出しへの直接リンク">​</a></h2><p>エラーにもよる思いますが、フォーマットすることで解決できると思う。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">sudo mkfs -t ext4 /dev/sdb</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li><p>mkfs
コマンド。ファイルシステムを作成するコマンド。デバイス内にファイルなどがあれば削除されると思うので気をつけること。</p></li><li><p>-t ext4
ファイルシステムの種類を指定。ext4が多いと思う。</p><blockquote><p>参考： <a href="https://qiita.com/sion_cojp/items/c8e015db39ddbf43012e" target="_blank" rel="noopener noreferrer">Linuxファイルシステムをまとめてみました</a></p></blockquote></li><li><p>/dev/sdb
デバイス上のファイルシステムを指定する。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">dmesg | grep -E "sd(a|b)"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>で確認できるっぽい</p></li></ul>]]></content:encoded>
        </item>
    </channel>
</rss>