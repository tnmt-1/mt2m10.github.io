{"pageProps":{"blog":{"id":"2019-11-20_1","title":"【PHP】composerの使い方","publishedAt":"2019-11-20","body":"<p>composerはPHPのライブラリ管理ツールです。以前から存在は知っていたけど、ちゃんと使ったことがありませんでした。</p>\n<p>最近、素のPHPを書く機会があり、ライブラリを使わないとかなりキツイことがあったので、調べたことをメモしておきます。</p>\n<h2 id=\"環境\">環境</h2>\n<ul>\n<li>vagrant</li>\n<li>VirtualBox</li>\n<li>CentOS7</li>\n<li>PHP 5.6</li>\n</ul>\n<h2 id=\"composerのインストール\">composerのインストール</h2>\n<pre><code class=\"language-bash\">### セットアップ用PHPスクリプトをダウンロード\n$ php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"\n\n### セットアップ実行\n$ php composer-setup.php\n\n### スクリプトを削除\n$ php -r \"unlink('composer-setup.php');\"\n\n### どこでも使えるように/usr/local/binに移動\n$ sudo mv composer.phar /usr/local/bin/composer\n\n### 動作確認\n$ composer -v\n   ______\n  / ____/___  ____ ___  ____  ____  ________  _____\n / /   / __ \\/ __ `__ \\/ __ \\/ __ \\/ ___/ _ \\/ ___/\n/ /___/ /_/ / / / / / / /_/ / /_/ (__  )  __/ /\n\\____/\\____/_/ /_/ /_/ .___/\\____/____/\\___/_/\n                    /_/\n</code></pre>\n<h2 id=\"ライブラリのインストール\">ライブラリのインストール</h2>\n<p>試しに、<code>Guzzle</code>をインストールします。</p>\n<blockquote>\n<p>Guzzleとは、PHPのHTTPクライアントで、HTTPリクエストを簡単に実現することができるライブラリです。</p>\n</blockquote>\n<h3 id=\"その１\">その１</h3>\n<p><code>require</code>コマンドでインストールする。</p>\n<pre><code class=\"language-bash\">$ composer require guzzlehttp/guzzle\nUsing version ^6.4 for guzzlehttp/guzzle\n./composer.json has been created\nLoading composer repositories with package information\nUpdating dependencies (including require-dev)\nPackage operations: 5 installs, 0 updates, 0 removals\n  - Installing ralouphie/getallheaders (3.0.3): Loading from cache\n  - Installing psr/http-message (1.0.1): Loading from cache\n  - Installing guzzlehttp/psr7 (1.6.1): Loading from cache\n  - Installing guzzlehttp/promises (v1.3.1): Loading from cache\n  - Installing guzzlehttp/guzzle (6.4.1): Loading from cache\nguzzlehttp/psr7 suggests installing zendframework/zend-httphandlerrunner (Emit PSR-7 responses)\nguzzlehttp/guzzle suggests installing psr/log (Required for using the Log middleware)\nWriting lock file\nGenerating autoload files\n</code></pre>\n<h3 id=\"その2\">その2</h3>\n<p><code>composer init</code>を利用してインストールする。</p>\n<pre><code class=\"language-bash\">### initで対話形式で、composer.jsonを作成します\n### この辺の細かいことは分からないので割愛\n$ composer init\n\n\n  Welcome to the Composer config generator\n\n\n\nThis command will guide you through creating your composer.json config.\n\nPackage name (&#x3C;vendor>/&#x3C;name>) [masashi/hoge]:\nDescription []:\nAuthor [masashi &#x3C;masashi6269>, n to skip]: n\nMinimum Stability []:\nPackage Type (e.g. library, project, metapackage, composer-plugin) []:\nLicense []:\n\nDefine your dependencies.\n\nWould you like to define your dependencies (require) interactively [yes]? yes\nSearch for a package: guzzlehttp/guzzle\nEnter the version constraint to require (or leave blank to use the latest version):\nUsing version ^6.4 for guzzlehttp/guzzle\nSearch for a package:\nWould you like to define your dev dependencies (require-dev) interactively [yes]?\nSearch for a package:\n\n{\n    \"name\": \"masashi/hoge\",\n    \"require\": {\n        \"guzzlehttp/guzzle\": \"^6.4\"\n    }\n}\n\nDo you confirm generation [yes]?\n</code></pre>\n<p><code>Search for a package:</code> のとこで<code>guzzlehttp/guzzle</code>を入力すると、<code>composer.json</code>の<code>require</code>に追加してくれます。</p>\n<p>これで準備完了。最後に<code>composer install</code>を実行してインストールします。</p>\n<pre><code class=\"language-bash\">$ composer install\nLoading composer repositories with package information\nUpdating dependencies (including require-dev)\nPackage operations: 5 installs, 0 updates, 0 removals\n  - Installing ralouphie/getallheaders (3.0.3): Loading from cache\n  - Installing psr/http-message (1.0.1): Loading from cache\n  - Installing guzzlehttp/psr7 (1.6.1): Loading from cache\n  - Installing guzzlehttp/promises (v1.3.1): Loading from cache\n  - Installing guzzlehttp/guzzle (6.4.1): Loading from cache\nguzzlehttp/psr7 suggests installing zendframework/zend-httphandlerrunner (Emit PSR-7 responses)\nguzzlehttp/guzzle suggests installing psr/log (Required for using the Log middleware)\nWriting lock file\nGenerating autoload files\n</code></pre>\n<h2 id=\"ライブラリの利用\">ライブラリの利用</h2>\n<p>オートローダーを読み込んだあとに、普通に使うだけ。</p>\n<pre><code class=\"language-php\">&#x3C;?php // autoloadを読み込むと、ライブラリを個別にrequire,includeしなくても使えます\nrequire dirname(__FILE__). '/vendor/autoload.php';\n\n$client = new \\GuzzleHttp\\Client();\n$response = $client->request('GET', 'https://api.github.com/repos/guzzle/guzzle');\necho $response->getStatusCode() . PHP_EOL; # 200\necho $response->getHeaderLine('content-type') . PHP_EOL; # 'application/json; charset=utf8'\necho print_r(json_decode($response->getBody()), true); # '{\"id\": 1420053, \"name\": \"guzzle\", ...}'\n</code></pre>\n<p>これだけでだいぶ楽になりました！</p>"}},"__N_SSG":true}