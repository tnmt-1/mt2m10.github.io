"use strict";(self.webpackChunkmt_2_m_10_github_io=self.webpackChunkmt_2_m_10_github_io||[]).push([[4419],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,f=d["".concat(p,".").concat(m)]||d[m]||s[m]||o;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2527:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>s,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={title:"Codeigniter 4 \u30e1\u30e2",date:new Date("2020-11-19T14:10:39.000Z")},i=void 0,l={permalink:"/en/2020/11/19/_1",source:"@site/blog/2020-11-19_1.md",title:"Codeigniter 4 \u30e1\u30e2",description:"CLI",date:"2020-11-19T14:10:39.000Z",formattedDate:"November 19, 2020",tags:[],readingTime:.835,hasTruncateMarker:!1,authors:[],frontMatter:{title:"Codeigniter 4 \u30e1\u30e2",date:"2020-11-19T14:10:39.000Z"},prevItem:{title:"anyenv\u304b\u3089nodenv\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b",permalink:"/en/2021/04/26/_node-install"},nextItem:{title:"\u3010PHP\u3011\u524d\u6708\u30fb\u7fcc\u6708\u306e\u672b\u65e5\u3092\u6c42\u3081\u308b\u3068\u304d\u306f\u614e\u91cd\u306b",permalink:"/en/2019/11/25/_1"}},p={authorsImageUrls:[]},c=[{value:"CLI",id:"cli",level:2},{value:"\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210",id:"\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210",level:3},{value:"\u30b7\u30fc\u30c9\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210",id:"\u30b7\u30fc\u30c9\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210",level:3},{value:"\u30b7\u30fc\u30c9\u6295\u5165",id:"\u30b7\u30fc\u30c9\u6295\u5165",level:3},{value:"\u66f8\u304d\u65b9",id:"\u66f8\u304d\u65b9",level:2},{value:"\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u30d5\u30a1\u30a4\u30eb",id:"\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u30d5\u30a1\u30a4\u30eb",level:3}],u={toc:c};function s(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"cli"},"CLI"),(0,a.kt)("h3",{id:"\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210"},"\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"# php spark migrate:create {table name}\n")),(0,a.kt)("h3",{id:"\u30b7\u30fc\u30c9\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210"},"\u30b7\u30fc\u30c9\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"# php spark make:seeder {table name}\n")),(0,a.kt)("h3",{id:"\u30b7\u30fc\u30c9\u6295\u5165"},"\u30b7\u30fc\u30c9\u6295\u5165"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"# php spark db:seed {seed file name}\n")),(0,a.kt)("h2",{id:"\u66f8\u304d\u65b9"},"\u66f8\u304d\u65b9"),(0,a.kt)("h3",{id:"\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u30d5\u30a1\u30a4\u30eb"},"\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u30d5\u30a1\u30a4\u30eb"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"<?php\nnamespace App\\Database\\Migrations;\n\nuse CodeIgniter\\Database\\Migration;\n\nclass Cars extends Migration\n{\n    public function up()\n    {\n        $this->forge->addField([\n            'id'     => [\n                    'type'           => 'CHAR',\n                    'constraint'     => 32,\n            ],\n            'type'   => [\n                    'type'           => 'TEXT',\n            ],\n            'price'  => [\n                    'type'           => 'INT',\n                    'constraint'     => 32,\n            ],\n            'color'  => [\n                    'type'           => 'TEXT',\n            ],\n            'remark' => [\n                    'type'           => 'TEXT',\n                    'null'           => true,\n            ],\n            'status' => [\n                    'type'           => 'ENUM',\n                    'constraint'     => ['onsale', 'sold'],\n                    'default'        => 'onsale',\n            ],\n\n            // \u914d\u5217\u3060\u3068datetime\u578b\u3067default\u8a2d\u5b9a\u304c\u3067\u304d\u306a\u3044\u306e\u3067\u4ee5\u4e0b\u66f8\u304d\u65b9\u3068\u306a\u308b\n            'created_at datetime default current_timestamp',\n            'updated_at datetime default current_timestamp on update current_timestamp',\n        ]);\n        $this->forge->addKey('id', true); // PL\n        $this->forge->createTable('cars');  // created\n    }\n\n    //--------------------------------------------------------------------\n\n    public function down()\n    {\n        $this->forge->dropTable('cars');\n    }\n}\n")))}s.isMDXComponent=!0}}]);